/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/functions.js":
/*!**************************!*\
  !*** ./src/functions.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calcSummary: () => (/* binding */ calcSummary),\n/* harmony export */   cancelAdd: () => (/* binding */ cancelAdd),\n/* harmony export */   checkDatesInThisWeek: () => (/* binding */ checkDatesInThisWeek),\n/* harmony export */   checkboxChecker: () => (/* binding */ checkboxChecker),\n/* harmony export */   closeEditTodoDetails: () => (/* binding */ closeEditTodoDetails),\n/* harmony export */   closeNoteDetails: () => (/* binding */ closeNoteDetails),\n/* harmony export */   closeTodoDetails: () => (/* binding */ closeTodoDetails),\n/* harmony export */   createMainTodo: () => (/* binding */ createMainTodo),\n/* harmony export */   createNote: () => (/* binding */ createNote),\n/* harmony export */   createProjectTab: () => (/* binding */ createProjectTab),\n/* harmony export */   deleteNoteCatalog: () => (/* binding */ deleteNoteCatalog),\n/* harmony export */   deleteTodoCatalog: () => (/* binding */ deleteTodoCatalog),\n/* harmony export */   dialogPopupRender: () => (/* binding */ dialogPopupRender),\n/* harmony export */   displayNoteCatalogEntry: () => (/* binding */ displayNoteCatalogEntry),\n/* harmony export */   displayTodoCatalogEntry: () => (/* binding */ displayTodoCatalogEntry),\n/* harmony export */   formatDateYYYYMMDD: () => (/* binding */ formatDateYYYYMMDD),\n/* harmony export */   getDateFromString: () => (/* binding */ getDateFromString),\n/* harmony export */   mainPanelRender: () => (/* binding */ mainPanelRender),\n/* harmony export */   openEditTodoDetails: () => (/* binding */ openEditTodoDetails),\n/* harmony export */   openTodoDetails: () => (/* binding */ openTodoDetails),\n/* harmony export */   renderNotes: () => (/* binding */ renderNotes),\n/* harmony export */   renderTodos: () => (/* binding */ renderTodos),\n/* harmony export */   sortToCategory: () => (/* binding */ sortToCategory),\n/* harmony export */   sortTodo: () => (/* binding */ sortTodo),\n/* harmony export */   submitEditNote: () => (/* binding */ submitEditNote),\n/* harmony export */   submitEditNoteForm: () => (/* binding */ submitEditNoteForm),\n/* harmony export */   submitEditTodo: () => (/* binding */ submitEditTodo),\n/* harmony export */   submitEditTodoForm: () => (/* binding */ submitEditTodoForm),\n/* harmony export */   submitNote: () => (/* binding */ submitNote),\n/* harmony export */   submitProject: () => (/* binding */ submitProject),\n/* harmony export */   submitTodo: () => (/* binding */ submitTodo),\n/* harmony export */   viewOrEditNoteDetails: () => (/* binding */ viewOrEditNoteDetails)\n/* harmony export */ });\n//variable declarations for dialog for creating new todo, project and note\r\nconst dialogCreateNew = document.getElementById(\"create-task\");\r\nconst dialogPanel = document.querySelector(\".create-new-panel\");\r\n\r\n//variable declarations for main panel\r\nconst mainPanel = document.querySelector(\".workspace-panel\");\r\nlet mainPanelWindow = null;\r\nlet activeProjectCategoryTab = null;\r\nconst projectTabIsActivePattern = new RegExp(\"projects\", 'i');\r\n\r\n\r\n//parse on local storage or create empty new mainTodos and notes\r\nconst mainTodos = JSON.parse(localStorage.getItem('mainTodos')) || {\r\n  \"today\" : [],\r\n  \"week\" : [],\r\n  \"overdue\" : [],\r\n  \"general\" : []\r\n}\r\n\r\n//const projectTodos = JSON.parse(localStorage.getItem('projectTodos')) || [];\r\nconst notes = JSON.parse(localStorage.getItem('notes')) || [];\r\n\r\n//create a mock details if no object found on local storage\r\nif (!localStorage.getItem('mainTodos')) { \r\n  //mainTodos.today.push(createMainTodo(inputtedTodoTitle, inputtedTodoDescription, inputtedTodoDueDate, inputtedTodoPriority, inputtedTodoStatus).mainTodoObject());\r\n  mainTodos.today.push(createMainTodo(\"House Chores\", \"Water the plants, clean the bathroom and make the bed\", \"2024-05-21\", \"LOW\", false).mainTodoObject());\r\n  mainTodos.today.push(createMainTodo(\"Get Haircut\", \"\", \"2024-05-22\", \"MID\", false).mainTodoObject());\r\n  mainTodos.today.push(createMainTodo(\"Javascript Self-Learning\", \"Continue project: To-do list production testing and incorporate bug fixes if needed\", \"2024-05-23\", \"HIGH\", true).mainTodoObject());\r\n  \r\n  mainTodos.week.push(createMainTodo(\"Do Grocery\", \"Buy 2 canned tuna, 1 carton milk and 2kg chicken\", \"2024-05-19\", \"MID\", false).mainTodoObject());\r\n  mainTodos.week.push(createMainTodo(\"Laundry\", \"Deliver laundry at 9AM then pickup at 5:30PM\", \"2024-07-05\", \"HIGH\", true).mainTodoObject());\r\n  mainTodos.week.push(createMainTodo(\"Doctor's Appointment\", \"Go to dermatologist appointment, bring medical records\", \"2024-05-27\", \"LOW\", false).mainTodoObject());\r\n\r\n  mainTodos[\"gym\"] = [];\r\n  mainTodos.gym.push(createMainTodo(\"BB Grocery\", \"Buy Protein Shake at Shoppee\", \"2024-06-10\", \"HIGH\", true).mainTodoObject());\r\n  mainTodos.gym.push(createMainTodo(\"Meal Prep\", \"Prepare meal prep for this week\", \"2024-07-02\", \"LOW\", false).mainTodoObject());\r\n  mainTodos.gym.push(createMainTodo(\"Statistics Update\", \"Weigh in then update calorie intaks\", \"2024-06-15\", \"LOW\", false).mainTodoObject());\r\n\r\n  mainTodos[\"work\"] = [];\r\n  mainTodos.work.push(createMainTodo(\"Script\", \"Create script request of client for SEO\", \"2024-06-13\", \"HIGH\", true).mainTodoObject());\r\n  mainTodos.work.push(createMainTodo(\"Ticket CleanUp\", \"Dobule check unresolved tickets from last week\", \"2024-06-21\", \"LOW\", false).mainTodoObject());\r\n  mainTodos.work.push(createMainTodo(\"1-on-1\", \"1 on 1 discussion with Boss\", \"2024-06-18\", \"HIGH\", false).mainTodoObject());\r\n\r\n  mainTodos[\"school\"] = [];\r\n  mainTodos.school.push(createMainTodo(\"Lecture 1\", \"Finish Lecture 1 on Engr Management\", \"2024-06-25\", \"MID\", true).mainTodoObject());\r\n  mainTodos.school.push(createMainTodo(\"Thesis\", \"Prepare thesis title and chapter 1-3\", \"2024-06-22\", \"HIGH\", false).mainTodoObject());\r\n  mainTodos.school.push(createMainTodo(\"Add Course\", \"Add 3 more units to next sem target courses\", \"2024-06-27\", \"HIGH\", false).mainTodoObject());\r\n}\r\n\r\nif(!localStorage.getItem('notes')) {\r\n  notes.push(createNote(\"Leave Balance\", \"Current Spend:\\n2 VL, 4 FB, 0 SL\\n0 BL\").mainNoteObject());\r\n  notes.push(createNote(\"Country Wishlist\", \"Japan\\nVietnam\\nTaiwan\").mainNoteObject());\r\n  notes.push(createNote(\"Local Travel Wishlist\", \"La Union\\nVigan\\nSiargao\\nPuerto Princesa\\nBoracay\\nBaguio\\nCamSur\").mainNoteObject());\r\n  notes.push(createNote(\"2025 Goals\", \"Take the boards\\nGo for a 6-digits job\\nBuy more sneakers\").mainNoteObject());\r\n  notes.push(createNote(\"Macros\", \"160g Protein\\n237g Carbs\\n31g Fat\\n1900 calories\").mainNoteObject());\r\n  notes.push(createNote(\"Work Notes\", \"Cultural Training - July1\\nSubmit doc for performance review - July 3\\nTalent Review - September\").mainNoteObject());\r\n  notes.push(createNote(\"Leave Balance Copy\", \"Current Spend:\\n2 VL, 4 FB, 0 SL\\n0 BL\").mainNoteObject());\r\n  notes.push(createNote(\"Country Wishlist Copy\", \"Japan\\nVietnam\\nTaiwan\").mainNoteObject());\r\n  notes.push(createNote(\"Local Travel Wishlist Copy\", \"La Union\\nVigan\\nSiargao\\nPuerto Princesa\\nBoracay\\nBaguio\\nCamSur\").mainNoteObject());\r\n  notes.push(createNote(\"2025 Goals Copy\", \"Take the boards\\nGo for a 6-digits job\\nBuy more sneakers\").mainNoteObject());\r\n  notes.push(createNote(\"Macros Copy\", \"160g Protein\\n237g Carbs\\n31g Fat\\n1900 calories\").mainNoteObject());\r\n  notes.push(createNote(\"Work Notes Copy\", \"Cultural Training - July1\\nSubmit doc for performance review - July 3\\nTalent Review - September\").mainNoteObject());\r\n}\r\n\r\n/*-----Main Panel Render Class-----*/\r\nclass mainPanelRender {\r\n  homeSummary (mainTodos, notes) {\r\n    \r\n    const childNodes = mainPanel.childNodes;\r\n\r\n    Array.from(childNodes).forEach(child => {\r\n      mainPanel.removeChild(child);\r\n    });\r\n    sortTodo (mainTodos);\r\n    const summary = calcSummary (mainTodos, notes);\r\n    //console.log(summary);\r\n    var mainpanel_summary_node_2 = document.createElement('DIV');\r\n    mainpanel_summary_node_2.setAttribute('class', 'home-summary');\r\n    mainPanel.appendChild(mainpanel_summary_node_2);\r\n\r\n    var mainpanel_summary_node_3 = document.createElement('P');\r\n    mainpanel_summary_node_3.setAttribute('class', 'home-summary-title');\r\n    mainpanel_summary_node_3.textContent = \"Summary of Tasks\";\r\n    mainpanel_summary_node_2.appendChild(mainpanel_summary_node_3);\r\n\r\n    var mainpanel_summary_node_5 = document.createElement('P');\r\n    mainpanel_summary_node_5.setAttribute('class', 'home-summary-texts');\r\n    mainpanel_summary_node_5.textContent = `Overall Tasks Done: ${summary['totalTodoDone']}`;\r\n    mainpanel_summary_node_2.appendChild(mainpanel_summary_node_5);\r\n\r\n    var mainpanel_summary_node_7 = document.createElement('P');\r\n    mainpanel_summary_node_7.setAttribute('class', 'home-summary-texts');\r\n    mainpanel_summary_node_7.textContent = `Total Tasks Today: ${summary['totalTasksToday']}`;\r\n    mainpanel_summary_node_2.appendChild(mainpanel_summary_node_7);\r\n\r\n    var mainpanel_summary_node_9 = document.createElement('P');\r\n    mainpanel_summary_node_9.setAttribute('class', 'home-summary-texts');\r\n    mainpanel_summary_node_9.textContent = `Total Tasks Overdue: ${summary['totalOverdueTasks']}`;\r\n    mainpanel_summary_node_2.appendChild(mainpanel_summary_node_9);\r\n\r\n    var mainpanel_summary_node_11 = document.createElement('P');\r\n    mainpanel_summary_node_11.setAttribute('class', 'home-summary-texts');\r\n    mainpanel_summary_node_11.textContent = `Total Tasks this Week: ${summary['totalTodoThisWeek']}`;\r\n    mainpanel_summary_node_2.appendChild(mainpanel_summary_node_11);\r\n\r\n    var mainpanel_summary_node_13 = document.createElement('P');\r\n    mainpanel_summary_node_13.setAttribute('class', 'home-summary-texts');\r\n    mainpanel_summary_node_13.textContent = `Total Projects: ${summary['totalProjects']}`;\r\n    mainpanel_summary_node_2.appendChild(mainpanel_summary_node_13);\r\n\r\n    var mainpanel_summary_node_15 = document.createElement('P');\r\n    mainpanel_summary_node_15.setAttribute('class', 'home-summary-texts');\r\n    mainpanel_summary_node_15.textContent = `Total Notes: ${summary['totalNotes']}`;\r\n    mainpanel_summary_node_2.appendChild(mainpanel_summary_node_15);\r\n    \r\n  }\r\n  todo () {\r\n    const childNodes = mainPanel.childNodes;\r\n    \r\n    Array.from(childNodes).forEach(child => {\r\n      mainPanel.removeChild(child);\r\n    });\r\n    mainPanel.setAttribute('style', 'padding: 2vh; flex-direction: column; overflow-y: auto; ');\r\n  }\r\n  notes () {\r\n    const childNodes = mainPanel.childNodes;\r\n\r\n    Array.from(childNodes).forEach(child => {\r\n      mainPanel.removeChild(child);\r\n    });\r\n    mainPanel.setAttribute('style', 'padding: 2vh; display: grid; grid-template-columns: repeat(4, 22.5%); column-gap: 2.5%;');\r\n  }\r\n}\r\nconst mainPanelOpen = new mainPanelRender();\r\n//function to push created and processed item to mainTodos object/task\r\nfunction createMainTodo(title, description, date, priority,status) {\r\n  return {\r\n    title: title,\r\n    description: description,\r\n    date: date,\r\n    priority: priority,\r\n    status: status,\r\n    mainTodoObject () {\r\n      const todoObject = {\r\n        \"title\": title,\r\n        \"description\": description,\r\n        \"date\": date,\r\n        \"priority\": priority,\r\n        \"status\": status\r\n      }\r\n      return todoObject;\r\n    },\r\n  };\r\n}\r\n//function to display todo catalogs\r\nfunction displayTodoCatalogEntry (index, title, date, category, description, priority, status) {\r\n  //console.log(title);\r\n  var todo_entry_node_2 = document.createElement('DIV');\r\n  todo_entry_node_2.setAttribute('class', 'todo-catalog');\r\n  todo_entry_node_2.setAttribute('id', `todo-entry${index}`);\r\n  if (priority == \"LOW\") {\r\n    todo_entry_node_2.setAttribute('style', 'border: 2px rgb(78, 78, 244) solid;');\r\n  } else if (priority == \"MID\") {\r\n    todo_entry_node_2.setAttribute('style', 'border: 2px rgb(181, 176, 43) solid;');\r\n  } else if (priority == \"HIGH\") {\r\n    todo_entry_node_2.setAttribute('style', 'border: 2px rgb(255, 25, 25) solid;')\r\n  }\r\n  mainPanel.appendChild(todo_entry_node_2);\r\n\r\n  var todo_entry_node_3 = document.createElement('INPUT');\r\n  todo_entry_node_3.setAttribute('type', 'checkbox');\r\n  todo_entry_node_3.setAttribute('name', `todo-entry${index}-checkbox`);\r\n  todo_entry_node_3.setAttribute('id', `todo-entry${index}-checkbox`);\r\n  if (status == true) {\r\n    todo_entry_node_3.setAttribute('checked', '');\r\n  }\r\n  todo_entry_node_2.appendChild(todo_entry_node_3);\r\n\r\n  var todo_entry_node_4 = document.createElement('P');\r\n  if (status == false) {\r\n    todo_entry_node_4.setAttribute('class', 'todo-catalog-title-default');\r\n  } else if (status == true) {\r\n    todo_entry_node_4.setAttribute('class', 'todo-catalog-title-checked');\r\n  }\r\n  todo_entry_node_4.setAttribute('id', `todo-entry${index}-title`);\r\n  todo_entry_node_4.textContent = `${title}`; //todo title\r\n  todo_entry_node_2.appendChild(todo_entry_node_4);\r\n\r\n  var todo_entry_node_6 = document.createElement('BUTTON');\r\n  todo_entry_node_6.setAttribute('class', 'todo-catalog-view-details-btn');\r\n  todo_entry_node_6.setAttribute('id', `todo-entry${index}-view-details`);\r\n  todo_entry_node_6.textContent = \"Details\";\r\n  todo_entry_node_2.appendChild(todo_entry_node_6);\r\n\r\n  var todo_entry_node_8 = document.createElement('P');\r\n  todo_entry_node_8.setAttribute('class', 'todo-catalog-due');\r\n  todo_entry_node_8.setAttribute('id', `todo-entry${index}-catalog-due`);\r\n  todo_entry_node_8.textContent = `${date}`; //todo due date\r\n  todo_entry_node_2.appendChild(todo_entry_node_8);\r\n\r\n  var todo_entry_node_10 = document.createElement('IMG');\r\n  todo_entry_node_10.setAttribute('src', './images/editor.svg');\r\n  todo_entry_node_10.setAttribute('class', 'todo-entry-edit-button');\r\n  todo_entry_node_10.setAttribute('id', `todo-entry${index}-edit`);\r\n  todo_entry_node_10.setAttribute('alt', 'edit-todo-entry-icon');\r\n  todo_entry_node_2.appendChild(todo_entry_node_10);\r\n\r\n  var todo_entry_node_11 = document.createElement('IMG');\r\n  todo_entry_node_11.setAttribute('src', './images/delete.svg');\r\n  todo_entry_node_11.setAttribute('class', 'todo-entry-delete-button');\r\n  todo_entry_node_11.setAttribute('id', `todo-entry${index}-delete`);\r\n  todo_entry_node_11.setAttribute('alt', 'delete-todo-entry');\r\n  todo_entry_node_2.appendChild(todo_entry_node_11);\r\n  //details dialog panel\r\n  var todo_entry_node_12 = document.createElement('DIALOG');\r\n  todo_entry_node_12.setAttribute('class', 'todo-catalog-view-details-popup');\r\n  todo_entry_node_12.setAttribute('id', `todo-entry${index}-details`);\r\n  todo_entry_node_2.appendChild(todo_entry_node_12);\r\n\r\n  var todo_entry_node_13 = document.createElement('DIV');\r\n  todo_entry_node_13.setAttribute('class', 'details-panel');\r\n  todo_entry_node_13.setAttribute('id', `todo-entry${index}-details-panel`);\r\n  todo_entry_node_12.appendChild(todo_entry_node_13);\r\n\r\n  var todo_entry_node_14 = document.createElement('DIV');\r\n  todo_entry_node_14.setAttribute('class', 'details-panel-title');\r\n  todo_entry_node_14.setAttribute('id', `todo-entry${index}-title`);\r\n  todo_entry_node_14.textContent = `${title}`; //todo title\r\n  todo_entry_node_13.appendChild(todo_entry_node_14);\r\n\r\n  var todo_entry_node_16 = document.createElement('SPAN');\r\n  todo_entry_node_16.setAttribute('class', 'details-panel-label');\r\n  todo_entry_node_16.textContent = \"Category: \";\r\n  todo_entry_node_13.appendChild(todo_entry_node_16);\r\n\r\n  var todo_entry_node_17 = document.createElement('P');\r\n  todo_entry_node_17.setAttribute('id', `todo-entry${index}-project`);\r\n  todo_entry_node_17.textContent = `${category}`; //todo first array index/PROJECT\r\n  todo_entry_node_13.appendChild(todo_entry_node_17);\r\n\r\n  var todo_entry_node_19 = document.createElement('BR');\r\n  todo_entry_node_13.appendChild(todo_entry_node_19);\r\n\r\n  var todo_entry_node_20 = document.createElement('SPAN');\r\n  todo_entry_node_20.setAttribute('class', 'details-panel-label');\r\n  todo_entry_node_20.textContent = \"Description: \";\r\n  todo_entry_node_13.appendChild(todo_entry_node_20);\r\n\r\n  var todo_entry_node_21 = document.createElement('P');\r\n  todo_entry_node_21.setAttribute('id', `todo-entry${index}-description`);\r\n  todo_entry_node_21.textContent = `${description}`; //todo description\r\n  todo_entry_node_13.appendChild(todo_entry_node_21);\r\n\r\n  var todo_entry_node_23 = document.createElement('BR');\r\n  todo_entry_node_13.appendChild(todo_entry_node_23);\r\n\r\n  var todo_entry_node_24 = document.createElement('SPAN');\r\n  todo_entry_node_24.setAttribute('class', 'details-panel-label');\r\n  todo_entry_node_24.textContent = \"Due Date: \";\r\n  todo_entry_node_13.appendChild(todo_entry_node_24);\r\n\r\n  var todo_entry_node_25 = document.createElement('P');\r\n  todo_entry_node_25.setAttribute('id', `todo-entry${index}-details-due`);\r\n  todo_entry_node_25.textContent = `${date}`; //todo due date\r\n  todo_entry_node_13.appendChild(todo_entry_node_25);\r\n\r\n  var todo_entry_node_27 = document.createElement('BR');\r\n  todo_entry_node_13.appendChild(todo_entry_node_27);\r\n\r\n  var todo_entry_node_28 = document.createElement('SPAN');\r\n  todo_entry_node_28.setAttribute('class', 'details-panel-label');\r\n  todo_entry_node_28.textContent = \"Priority: \";\r\n  todo_entry_node_13.appendChild(todo_entry_node_28);\r\n\r\n  var todo_entry_node_29 = document.createElement('P');\r\n  todo_entry_node_29.setAttribute('id', `todo-entry${index}-priority`);\r\n  todo_entry_node_29.textContent = `${priority}`; //todo priority\r\n  todo_entry_node_13.appendChild(todo_entry_node_29);\r\n\r\n  var todo_entry_node_31 = document.createElement('BR');\r\n  todo_entry_node_13.appendChild(todo_entry_node_31);\r\n\r\n  var todo_entry_node_32 = document.createElement('BUTTON');\r\n  todo_entry_node_32.setAttribute('class', 'close-todo-details-btn');\r\n  todo_entry_node_32.textContent = \"Close\";\r\n  todo_entry_node_13.appendChild(todo_entry_node_32);\r\n\r\n  //edit dialog panel \r\n  var edit_todo_entry_node_1 = document.createElement('DIALOG');\r\n  edit_todo_entry_node_1.setAttribute('class', 'edit-todo-popup');\r\n  edit_todo_entry_node_1.setAttribute('id', `edit-todo-entry${index}`);\r\n  todo_entry_node_2.appendChild(edit_todo_entry_node_1);\r\n\r\n  var edit_todo_entry_node_2 = document.createElement('FORM');\r\n  edit_todo_entry_node_2.setAttribute('class', 'edit-todo-popup-form');\r\n  edit_todo_entry_node_2.setAttribute('id', `edit-todo-entry${index}-form`);\r\n  edit_todo_entry_node_1.appendChild(edit_todo_entry_node_2);\r\n\r\n  var edit_todo_entry_node_3 = document.createElement('DIV');\r\n  edit_todo_entry_node_3.setAttribute('class', 'edit-todo');\r\n  edit_todo_entry_node_2.appendChild(edit_todo_entry_node_3);\r\n\r\n  var edit_todo_entry_node_4 = document.createElement('DIV');\r\n  edit_todo_entry_node_4.setAttribute('class', 'edit-todo-header');\r\n  edit_todo_entry_node_3.appendChild(edit_todo_entry_node_4);\r\n\r\n  var edit_todo_entry_node_5 = document.createElement('P');\r\n  edit_todo_entry_node_5.textContent = \"EDIT TODO\";\r\n  edit_todo_entry_node_4.appendChild(edit_todo_entry_node_5);\r\n\r\n  var edit_todo_entry_node_7 = document.createElement('DIV');\r\n  edit_todo_entry_node_7.setAttribute('class', 'edit-todo-panel');\r\n  edit_todo_entry_node_3.appendChild(edit_todo_entry_node_7);\r\n\r\n  var edit_todo_entry_node_8 = document.createElement('DIV');\r\n  edit_todo_entry_node_8.setAttribute('class', 'todo-text-input');\r\n  edit_todo_entry_node_7.appendChild(edit_todo_entry_node_8);\r\n\r\n  var edit_todo_entry_node_9 = document.createElement('TEXTAREA');\r\n  edit_todo_entry_node_9.setAttribute('class', 'todo-edit-title');\r\n  edit_todo_entry_node_9.setAttribute('id', `edit-todo-entry${index}-title`);\r\n  edit_todo_entry_node_9.setAttribute('name', 'edit-todo-title');\r\n  edit_todo_entry_node_9.setAttribute('maxlength', '40');\r\n  edit_todo_entry_node_9.setAttribute('placeholder', 'Task Title: Pay bills');\r\n  edit_todo_entry_node_9.setAttribute('required', '');\r\n  edit_todo_entry_node_9.textContent = `${title}`;\r\n  edit_todo_entry_node_8.appendChild(edit_todo_entry_node_9);\r\n\r\n  var edit_todo_entry_node_10 = document.createElement('TEXTAREA');\r\n  edit_todo_entry_node_10.setAttribute('class', 'todo-edit-description');\r\n  edit_todo_entry_node_10.setAttribute('id', `edit-todo-entry${index}-description`);\r\n  edit_todo_entry_node_10.setAttribute('name', 'edit-todo-description');\r\n  edit_todo_entry_node_10.setAttribute('maxlength', '1000');\r\n  edit_todo_entry_node_10.setAttribute('placeholder', 'Description: Electric Bills, Wi-Fi, etc.');\r\n  //edit_todo_entry_node_10.setAttribute('required', ''); due to some todo has no description\r\n  edit_todo_entry_node_10.textContent = `${description}`;\r\n  edit_todo_entry_node_8.appendChild(edit_todo_entry_node_10);\r\n\r\n  var edit_todo_entry_node_11 = document.createElement('DIV');\r\n  edit_todo_entry_node_11.setAttribute('class', 'todo-edit-date-and-prio-input');\r\n  edit_todo_entry_node_7.appendChild(edit_todo_entry_node_11);\r\n\r\n  var edit_todo_entry_node_12 = document.createElement('LABEL');\r\n  edit_todo_entry_node_12.setAttribute('class', 'todo-edit-due-date-title');\r\n  edit_todo_entry_node_12.setAttribute('for', `edit-todo-entry${index}-due-date`);\r\n  edit_todo_entry_node_12.textContent = \"Due Date: \";\r\n  edit_todo_entry_node_11.appendChild(edit_todo_entry_node_12);\r\n\r\n  var edit_todo_entry_node_13 = document.createElement('INPUT');\r\n  edit_todo_entry_node_13.setAttribute('type', 'date');\r\n  edit_todo_entry_node_13.setAttribute('class', 'todo-edit-due-date-input');\r\n  edit_todo_entry_node_13.setAttribute('id', `edit-todo-entry${index}-due-date`);\r\n  edit_todo_entry_node_13.setAttribute('name', 'edit-todo-entry-due-date');\r\n  edit_todo_entry_node_13.setAttribute('required', '');\r\n  edit_todo_entry_node_13.setAttribute('value', `${date}`);\r\n  edit_todo_entry_node_12.appendChild(edit_todo_entry_node_13);\r\n\r\n  var edit_todo_entry_node_14 = document.createElement('DIV');\r\n  edit_todo_entry_node_14.setAttribute('class', 'priority-input-edit-todo');\r\n  edit_todo_entry_node_11.appendChild(edit_todo_entry_node_14);\r\n\r\n  var edit_todo_entry_node_15 = document.createElement('P');\r\n  edit_todo_entry_node_15.setAttribute('class', 'edit-todo-priority-title');\r\n  edit_todo_entry_node_15.textContent = \"Prioritry Level: \";\r\n  edit_todo_entry_node_14.appendChild(edit_todo_entry_node_15);\r\n\r\n  var edit_todo_entry_node_16 = document.createElement('INPUT');\r\n  edit_todo_entry_node_16.setAttribute('type', 'radio');\r\n  edit_todo_entry_node_16.setAttribute('class', 'todo-priority-low');\r\n  edit_todo_entry_node_16.setAttribute('id', `edit-todo-entry${index}-priority-low`);\r\n  edit_todo_entry_node_16.setAttribute('name', `edit-todo-entry${index}-priority`);\r\n  edit_todo_entry_node_16.setAttribute('value', 'LOW');\r\n  edit_todo_entry_node_16.setAttribute('required', '');\r\n  if (priority == \"LOW\") {\r\n  edit_todo_entry_node_16.setAttribute('checked', '');\r\n  }\r\n  edit_todo_entry_node_14.appendChild(edit_todo_entry_node_16);\r\n\r\n  var edit_todo_entry_node_17 = document.createElement('LABEL');\r\n  edit_todo_entry_node_17.setAttribute('class', 'todo-priority-label-low');\r\n  edit_todo_entry_node_17.setAttribute('for', `edit-todo-entry${index}-priority-low`);\r\n  edit_todo_entry_node_17.textContent = \"LOW\";\r\n  edit_todo_entry_node_14.appendChild(edit_todo_entry_node_17);\r\n\r\n  var edit_todo_entry_node_19 = document.createElement('INPUT');\r\n  edit_todo_entry_node_19.setAttribute('type', 'radio');\r\n  edit_todo_entry_node_19.setAttribute('class', 'todo-priority-mid');\r\n  edit_todo_entry_node_19.setAttribute('id', `edit-todo-entry${index}-priority-mid`);\r\n  edit_todo_entry_node_19.setAttribute('name', `edit-todo-entry${index}-priority`);\r\n  edit_todo_entry_node_19.setAttribute('value', 'MID');\r\n  edit_todo_entry_node_19.setAttribute('required', '');\r\n  if (priority == \"MID\") {\r\n    edit_todo_entry_node_19.setAttribute('checked', '');\r\n  }\r\n  edit_todo_entry_node_14.appendChild(edit_todo_entry_node_19);\r\n\r\n  var edit_todo_entry_node_20 = document.createElement('LABEL');\r\n  edit_todo_entry_node_20.setAttribute('class', 'todo-priority-label-mid');\r\n  edit_todo_entry_node_20.setAttribute('for', `edit-todo-entry${index}-priority-mid`);\r\n  edit_todo_entry_node_20.textContent = \"MID\";\r\n  edit_todo_entry_node_14.appendChild(edit_todo_entry_node_20);\r\n\r\n  var edit_todo_entry_node_22 = document.createElement('INPUT');\r\n  edit_todo_entry_node_22.setAttribute('type', 'radio');\r\n  edit_todo_entry_node_22.setAttribute('class', 'todo-priority-high');\r\n  edit_todo_entry_node_22.setAttribute('id', `edit-todo-entry${index}-priority-high`);\r\n  edit_todo_entry_node_22.setAttribute('name', `edit-todo-entry${index}-priority`);\r\n  edit_todo_entry_node_22.setAttribute('value', 'HIGH');\r\n  edit_todo_entry_node_22.setAttribute('required', '');\r\n  if (priority == \"HIGH\") {\r\n    edit_todo_entry_node_22.setAttribute('checked', '');\r\n  }\r\n  edit_todo_entry_node_14.appendChild(edit_todo_entry_node_22);\r\n\r\n  var edit_todo_entry_node_23 = document.createElement('LABEL');\r\n  edit_todo_entry_node_23.setAttribute('class', 'todo-priority-label-high');\r\n  edit_todo_entry_node_23.setAttribute('for', `edit-todo-entry${index}-priority-high`);\r\n  edit_todo_entry_node_23.textContent = \"HIGH\";\r\n  edit_todo_entry_node_14.appendChild(edit_todo_entry_node_23);\r\n\r\n  var edit_todo_entry_node_25 = document.createElement('BUTTON');\r\n  edit_todo_entry_node_25.setAttribute('class', 'todo-editor');\r\n  edit_todo_entry_node_25.setAttribute('id', 'confirm');\r\n  edit_todo_entry_node_25.setAttribute('type', 'submit');\r\n  edit_todo_entry_node_25.setAttribute('value', 'default');\r\n  edit_todo_entry_node_11.appendChild(edit_todo_entry_node_25);\r\n\r\n  var edit_todo_entry_node_26 = document.createElement('IMG');\r\n  edit_todo_entry_node_26.setAttribute('src', './images/check.svg');\r\n  edit_todo_entry_node_26.setAttribute('alt', 'check-icon');\r\n  edit_todo_entry_node_25.appendChild(edit_todo_entry_node_26);\r\n\r\n  var edit_todo_entry_node_27 = document.createElement('BUTTON');\r\n  edit_todo_entry_node_27.setAttribute('class', 'cancel');\r\n  edit_todo_entry_node_27.setAttribute('id', 'cancel-edit-todo');\r\n  edit_todo_entry_node_27.textContent = \"X\";\r\n  edit_todo_entry_node_11.appendChild(edit_todo_entry_node_27);\r\n}\r\n//function to render todo catalogs, add eventlistener to open/close details dialog, delete entry and check if textbox is toggled\r\nfunction renderTodos (activeTab, mainTodos) {\r\n  if (activeTab != \"MY HOME\" && activeTab != \"MY NOTES\") {\r\n    sortTodo (mainTodos);\r\n    //For use to loop through keys of mainTodos => categories\r\n    const todoCategories = Object.keys(mainTodos);\r\n    //console.log(todoCategories);\r\n    for (let todoCategory of todoCategories) {\r\n      //console.log(todoCategory);\r\n      const todoCategoryPattern = new RegExp(todoCategory, 'i');\r\n      if (activeTab.match(todoCategoryPattern)) {\r\n        //console.log(todoCategory);\r\n        const currentTodoObject = mainTodos[`${todoCategory}`];\r\n        //console.log(currentTodoObject.length);\r\n        if (currentTodoObject.length == 0) {\r\n          var mainpanel_todo_node = document.createElement('SPAN');\r\n          mainpanel_todo_node.setAttribute('class', 'todo-empty-currentTodoObject-message');\r\n          mainpanel_todo_node.textContent = \"No todo added here yet click the \\\"+\\\" button to add.\"\r\n          mainPanel.appendChild(mainpanel_todo_node);\r\n        }\r\n        currentTodoObject.forEach(function(entry, index) {\r\n          //console.log(entry);\r\n          let category = `${todoCategory}`;\r\n          displayTodoCatalogEntry (index, entry.title, entry.date, category, entry.description, entry.priority, entry.status);\r\n        });\r\n        //todo entry details dialog open\r\n        openTodoDetails ();\r\n        //todo entry details dialog close\r\n        closeTodoDetails ();\r\n        //Change class if checkbox is toggled\r\n        checkboxChecker (currentTodoObject);\r\n        //todo entry delete catalog button\r\n        deleteTodoCatalog (currentTodoObject);\r\n        //edit todo entry popup\r\n        openEditTodoDetails ();\r\n        //todo edit dialog close\r\n        closeEditTodoDetails ();\r\n        //todo edit form submit\r\n        submitEditTodoForm (currentTodoObject);\r\n      }\r\n    }\r\n  }\r\n}\r\n//create addtional tab at the navigation bar with respect to available keys on mainTodos object and add eventlistener to each tab and whenever there is a new one\r\nfunction createProjectTab (mainTodos) {\r\n  const projectTab = document.querySelector('.projects');\r\n  const projectTabChilren = projectTab.childNodes;\r\n  const dontMatchEmpty = new RegExp(\"\\\\n\");\r\n  const displayedProjectTabs =[];\r\n  //Check all project tab category displayed on projectsTab\r\n  for ( let projectTabChild of projectTabChilren) {\r\n    //needed to unmatch newlines due to childNodes include #text -> new lines on HTML\r\n    if (!projectTabChild.textContent.match(dontMatchEmpty)) {\r\n      displayedProjectTabs.push(projectTabChild.textContent.toLowerCase());\r\n    }\r\n  }\r\n  //console.log(displayedProjectTabs);\r\n  //For use to loop through keys of mainTodos => categories\r\n  const todoCategories = Object.keys(mainTodos);\r\n  for (let todoCategory of todoCategories) {\r\n    if (!displayedProjectTabs.includes(`${todoCategory}`)) {\r\n      //if current key in object is not yet displayed and excluding today and week\r\n      if (todoCategory != \"today\" && todoCategory != \"week\" && todoCategory != \"overdue\" && todoCategory != \"general\") {\r\n        const toDisplayTodoCategory = todoCategory.toUpperCase();\r\n        var add_project_tab_node = document.createElement('LI');\r\n        add_project_tab_node.setAttribute('class', 'main-panel-menu-projects-item');\r\n        add_project_tab_node.textContent = `${toDisplayTodoCategory}`;\r\n        projectTab.appendChild(add_project_tab_node);\r\n        console.log (`Displayed new Project Tab for category ${todoCategory}`);\r\n        console.log(`Updated keys of mainTodos object ${todoCategories}`);\r\n      }\r\n    } else {\r\n      console.log(`${todoCategory} already has a displayed Project Tab`);\r\n    }\r\n  }\r\n  //event listener for project/category tabs\r\n  const projectCategoryTabs = document.querySelectorAll(\".main-panel-menu-projects-item\");\r\n  projectCategoryTabs.forEach(function(projectCategoryTab, index) {\r\n    projectCategoryTab.addEventListener(\"click\", function(e) {\r\n      //To know which tab is active\r\n      activeProjectCategoryTab = projectCategoryTab.textContent;\r\n      const activeProjectCategoryTabPattern = new RegExp(`${activeProjectCategoryTab}`, 'i');\r\n      console.log(activeProjectCategoryTab);\r\n\r\n      projectCategoryTabs.forEach(function(projectCategoryTab, index) { \r\n        projectCategoryTab.classList.remove('main-panel-menu-projects-item-active');\r\n      });\r\n\r\n        projectCategoryTab.classList.add('main-panel-menu-projects-item-active');\r\n      \r\n      mainPanelOpen.todo();\r\n      renderTodos (activeProjectCategoryTab, mainTodos);\r\n        return activeProjectCategoryTab;\r\n    });\r\n  });\r\n}\r\n//function to push created and processed item to notes object\r\nfunction createNote(title, description) {\r\n  return {\r\n    title: title,\r\n    description: description,\r\n    mainNoteObject () {\r\n      const noteObject = {\r\n        \"title\": title,\r\n        \"description\": description,\r\n      }\r\n      return noteObject;\r\n    },\r\n  };\r\n}\r\n//function to display note catalogs\r\nfunction displayNoteCatalogEntry (index, title, description) {\r\n  var note_entry_node_1 = document.createElement('DIV');\r\n  note_entry_node_1.setAttribute('class', 'notes');\r\n  note_entry_node_1.setAttribute('id', `note-entry${index}`);\r\n  mainPanel.appendChild(note_entry_node_1);\r\n\r\n  var note_entry_node_2 = document.createElement('DIV');\r\n  note_entry_node_2.setAttribute('class', 'note-buttons');\r\n  note_entry_node_1.appendChild(note_entry_node_2);\r\n\r\n  var note_entry_node_3 = document.createElement('IMG');\r\n  note_entry_node_3.setAttribute('src', './images/eye-view.svg');\r\n  note_entry_node_3.setAttribute('alt', '');\r\n  note_entry_node_3.setAttribute('class', 'view-note');\r\n  note_entry_node_3.setAttribute('id', `view-note-entry${index}`);\r\n  note_entry_node_2.appendChild(note_entry_node_3);\r\n  \r\n  var note_entry_node_4 = document.createElement('IMG');\r\n  note_entry_node_4.setAttribute('src', './images/x-delete.svg');\r\n  note_entry_node_4.setAttribute('alt', '');\r\n  note_entry_node_4.setAttribute('class', 'delete-note');\r\n  note_entry_node_4.setAttribute('id', `delete-note-entry${index}`);\r\n  note_entry_node_2.appendChild(note_entry_node_4);\r\n  \r\n  var note_entry_node_5 = document.createElement('DIV');\r\n  note_entry_node_5.setAttribute('class', 'note-title');\r\n  note_entry_node_5.setAttribute('id', `note-entry${index}-title`);\r\n  note_entry_node_5.textContent = `${title}`;\r\n  note_entry_node_1.appendChild(note_entry_node_5);\r\n  \r\n  var note_entry_node_6 = document.createElement('DIV');\r\n  note_entry_node_6.setAttribute('class', 'note-description-body');\r\n  note_entry_node_1.appendChild(note_entry_node_6);\r\n  \r\n  var note_entry_node_7 = document.createElement('DIV');\r\n  note_entry_node_7.setAttribute('class', 'note-description-text');\r\n  note_entry_node_7.setAttribute('id', `note-entry${index}-description-text`);\r\n  note_entry_node_7.textContent = `${description}`;\r\n  note_entry_node_6.appendChild(note_entry_node_7); \r\n\r\n  //dialog to view or edit note entry\r\n  var note_entry_dialog_node_1 = document.createElement('DIALOG');\r\n  note_entry_dialog_node_1.setAttribute('class', 'edit-note-popup');\r\n  note_entry_dialog_node_1.setAttribute('id', `edit-note-entry${index}`);\r\n  mainPanel.appendChild(note_entry_dialog_node_1);\r\n  \r\n  var note_entry_dialog_node_2 = document.createElement('FORM');\r\n  note_entry_dialog_node_2.setAttribute('class', 'edit-note-popup-form');\r\n  note_entry_dialog_node_2.setAttribute('id', `edit-note-entry${index}-form`);\r\n  note_entry_dialog_node_1.appendChild(note_entry_dialog_node_2);\r\n  \r\n  var note_entry_dialog_node_3 = document.createElement('DIV');\r\n  note_entry_dialog_node_3.setAttribute('class', 'edit-note');\r\n  note_entry_dialog_node_2.appendChild(note_entry_dialog_node_3);\r\n  \r\n  var note_entry_dialog_node_4 = document.createElement('DIV');\r\n  note_entry_dialog_node_4.setAttribute('class', 'edit-note-header');\r\n  note_entry_dialog_node_3.appendChild(note_entry_dialog_node_4);\r\n  \r\n  var note_entry_dialog_node_5 = document.createElement('P');\r\n  note_entry_dialog_node_5.textContent = \"EDIT/VIEW NOTE DETAIL\";\r\n  note_entry_dialog_node_4.appendChild(note_entry_dialog_node_5);\r\n  \r\n  var note_entry_dialog_node_7 = document.createElement('DIV');\r\n  note_entry_dialog_node_7.setAttribute('class', 'edit-note-panel');\r\n  note_entry_dialog_node_3.appendChild(note_entry_dialog_node_7);\r\n  \r\n  var note_entry_dialog_node_8 = document.createElement('DIV');\r\n  note_entry_dialog_node_8.setAttribute('class', 'edit-note-text-input');\r\n  note_entry_dialog_node_7.appendChild(note_entry_dialog_node_8);\r\n  \r\n  var note_entry_dialog_node_9 = document.createElement('TEXTAREA');\r\n  note_entry_dialog_node_9.setAttribute('class', 'note-edit-title');\r\n  note_entry_dialog_node_9.setAttribute('id', `edit-note-entry${index}-title`);\r\n  note_entry_dialog_node_9.setAttribute('name', 'edit-note-title');\r\n  note_entry_dialog_node_9.setAttribute('maxlength', '40');\r\n  note_entry_dialog_node_9.setAttribute('required', '');\r\n  note_entry_dialog_node_9.textContent = `${title}`;\r\n  note_entry_dialog_node_8.appendChild(note_entry_dialog_node_9);\r\n  \r\n  var note_entry_dialog_node_10 = document.createElement('TEXTAREA');\r\n  note_entry_dialog_node_10.setAttribute('class', 'note-edit-description');\r\n  note_entry_dialog_node_10.setAttribute('id', `edit-note-entry${index}-description`);\r\n  note_entry_dialog_node_10.setAttribute('name', 'edit-note-description');\r\n  note_entry_dialog_node_10.setAttribute('maxlength', '1000');\r\n  note_entry_dialog_node_10.setAttribute('required', '');\r\n  note_entry_dialog_node_10.textContent = `${description}`;\r\n  note_entry_dialog_node_8.appendChild(note_entry_dialog_node_10);\r\n\r\n  var note_entry_dialog_node_11 = document.createElement('DIV');\r\n  note_entry_dialog_node_11.setAttribute('class', 'edit-note-buttons');\r\n  note_entry_dialog_node_3.appendChild(note_entry_dialog_node_11);\r\n  \r\n  var note_entry_dialog_node_12 = document.createElement('BUTTON');\r\n  note_entry_dialog_node_12.setAttribute('class', 'note-confirm-edit-btn');\r\n  note_entry_dialog_node_12.setAttribute('id', `confirm-edit-note-entry${index}`);\r\n  note_entry_dialog_node_12.setAttribute('type', 'submit');\r\n  note_entry_dialog_node_12.setAttribute('value', 'default');\r\n  note_entry_dialog_node_12.textContent = \"Edit\";\r\n  note_entry_dialog_node_11.appendChild(note_entry_dialog_node_12);\r\n  \r\n  var note_entry_dialog_node_13 = document.createElement('BUTTON');\r\n  note_entry_dialog_node_13.setAttribute('class', 'note-cancel-edit-btn');\r\n  note_entry_dialog_node_13.setAttribute('id', `cancel-edit-note-entry${index}`);\r\n  note_entry_dialog_node_13.textContent = \"Close\";\r\n  note_entry_dialog_node_11.appendChild(note_entry_dialog_node_13);\r\n}\r\n//function to render note catalogs, add eventlistener to open/close details dialog, delete entry, edit entry and check if textbox is toggled\r\nfunction renderNotes (activeTab, notes) {\r\n  if (activeTab == \"MY NOTES\") {\r\n    if (notes.length == 0) {\r\n      var mainpanel_note_node = document.createElement('SPAN');\r\n      mainpanel_note_node.setAttribute('class', 'note-empty-message');\r\n      mainpanel_note_node.textContent = \"No notes added yet click the \\\"+\\\" button to add.\"\r\n      mainPanel.appendChild(mainpanel_note_node);\r\n    }\r\n    notes.forEach(function(note, index) {\r\n      //console.log(entry);\r\n      displayNoteCatalogEntry (index, note.title, note.description);\r\n    });\r\n    //view or edit note details dialog\r\n    viewOrEditNoteDetails ();\r\n    //close view or edit note details dialog\r\n    closeNoteDetails ();\r\n    //delete note entry\r\n    deleteNoteCatalog (notes);\r\n    //submit and reflect note edit form\r\n    submitEditTodoForm (notes);\r\n  }\r\n}\r\n\r\n/*-----Dialog Popup Render Class-----*/\r\n//pop-up dialog\r\nclass dialogPopupRender {\r\n  renderCreateTodoDialog () {\r\n    const childNodes = dialogPanel.childNodes;\r\n\r\n    Array.from(childNodes).forEach(child => {\r\n      dialogPanel.removeChild(child);\r\n    });\r\n    \r\n    var dialog_todo_node_2 = document.createElement('DIV');\r\n    dialog_todo_node_2.setAttribute('class', 'todo-text-input');\r\n    dialogPanel.appendChild(dialog_todo_node_2);\r\n\r\n    var dialog_todo_node_3 = document.createElement('TEXTAREA');\r\n    dialog_todo_node_3.setAttribute('class', 'todo-create-new-title');\r\n    dialog_todo_node_3.setAttribute('id', 'edit-new-todo-title');\r\n    dialog_todo_node_3.setAttribute('name', 'new-todo-title');\r\n    dialog_todo_node_3.setAttribute('maxlength', '40');\r\n    dialog_todo_node_3.setAttribute('placeholder', 'Task Title: Pay bills');\r\n    dialog_todo_node_3.setAttribute('required', '');\r\n    dialog_todo_node_2.appendChild(dialog_todo_node_3);\r\n\r\n    var dialog_todo_node_4 = document.createElement('TEXTAREA');\r\n    dialog_todo_node_4.setAttribute('class', 'todo-create-new-description');\r\n    dialog_todo_node_4.setAttribute('id', 'edit-new-todo-description');\r\n    dialog_todo_node_4.setAttribute('name', 'new-todo-description');\r\n    dialog_todo_node_4.setAttribute('maxlength', '1000');\r\n    dialog_todo_node_4.setAttribute('placeholder', 'Description: Electric Bills, Wi-Fi, etc.');\r\n    dialog_todo_node_4.setAttribute('required', '');\r\n    dialog_todo_node_2.appendChild(dialog_todo_node_4);\r\n\r\n    var dialog_todo_node_5 = document.createElement('DIV');\r\n    dialog_todo_node_5.setAttribute('class', 'todo-date-and-prio-input');\r\n    dialogPanel.appendChild(dialog_todo_node_5);\r\n\r\n    var dialog_todo_node_7 = document.createElement('LABEL');\r\n    dialog_todo_node_7.setAttribute('class', 'todo-due-date-title');\r\n    dialog_todo_node_7.setAttribute('for', 'due-date');\r\n    dialog_todo_node_7.textContent = \"Due Date: \";\r\n    dialog_todo_node_5.appendChild(dialog_todo_node_7);\r\n\r\n    var dialog_todo_node_8 = document.createElement('INPUT');\r\n    dialog_todo_node_8.setAttribute('type', 'date');\r\n    dialog_todo_node_8.setAttribute('class', 'todo-due-date-input');\r\n    dialog_todo_node_8.setAttribute('id', 'due-date');\r\n    dialog_todo_node_8.setAttribute('name', 'due-date');\r\n    dialog_todo_node_8.setAttribute('required', '');\r\n    dialog_todo_node_7.appendChild(dialog_todo_node_8);\r\n\r\n    var dialog_todo_node_9 = document.createElement('DIV');\r\n    dialog_todo_node_9.setAttribute('class', 'priority-input-todo');\r\n    dialog_todo_node_5.appendChild(dialog_todo_node_9);\r\n\r\n    var dialog_todo_node_10 = document.createElement('P');\r\n    dialog_todo_node_10.setAttribute('class', 'todo-priority-title');\r\n    dialog_todo_node_10.textContent = \"Priority Level: \";\r\n    dialog_todo_node_9.appendChild(dialog_todo_node_10);\r\n\r\n    var dialog_todo_node_11 = document.createElement('INPUT');\r\n    dialog_todo_node_11.setAttribute('type', 'radio');\r\n    dialog_todo_node_11.setAttribute('class', 'todo-priority-low');\r\n    dialog_todo_node_11.setAttribute('id', 'todo-priority-low');\r\n    dialog_todo_node_11.setAttribute('name', 'todo-priority');\r\n    dialog_todo_node_11.setAttribute('value', 'LOW');\r\n    dialog_todo_node_11.setAttribute('required', '');\r\n    dialog_todo_node_9.appendChild(dialog_todo_node_11);\r\n\r\n    var dialog_todo_node_12 = document.createElement('LABEL');\r\n    dialog_todo_node_12.setAttribute('class', 'todo-priority-label-low');\r\n    dialog_todo_node_12.setAttribute('for', 'todo-priority-low');\r\n    dialog_todo_node_12.textContent = \"LOW\";\r\n    dialog_todo_node_9.appendChild(dialog_todo_node_12);\r\n\r\n    var dialog_todo_node_14 = document.createElement('INPUT');\r\n    dialog_todo_node_14.setAttribute('type', 'radio');\r\n    dialog_todo_node_14.setAttribute('class', 'todo-priority-mid');\r\n    dialog_todo_node_14.setAttribute('id', 'todo-priority-mid');\r\n    dialog_todo_node_14.setAttribute('name', 'todo-priority');\r\n    dialog_todo_node_14.setAttribute('value', 'MID');\r\n    dialog_todo_node_14.setAttribute('required', '');\r\n    dialog_todo_node_9.appendChild(dialog_todo_node_14);\r\n\r\n    var dialog_todo_node_15 = document.createElement('LABEL');\r\n    dialog_todo_node_15.setAttribute('class', 'todo-priority-label-mid');\r\n    dialog_todo_node_15.setAttribute('for', 'todo-priority-mid');\r\n    dialog_todo_node_15.textContent = \"MID\";\r\n    dialog_todo_node_9.appendChild(dialog_todo_node_15);\r\n\r\n    var dialog_todo_node_17 = document.createElement('INPUT');\r\n    dialog_todo_node_17.setAttribute('type', 'radio');\r\n    dialog_todo_node_17.setAttribute('class', 'todo-priority-high');\r\n    dialog_todo_node_17.setAttribute('id', 'todo-priority-high');\r\n    dialog_todo_node_17.setAttribute('name', 'todo-priority');\r\n    dialog_todo_node_17.setAttribute('value', 'HIGH');\r\n    dialog_todo_node_17.setAttribute('required', '');\r\n    dialog_todo_node_9.appendChild(dialog_todo_node_17);\r\n\r\n    var dialog_todo_node_18 = document.createElement('LABEL');\r\n    dialog_todo_node_18.setAttribute('class', 'todo-priority-label-high');\r\n    dialog_todo_node_18.setAttribute('for', 'todo-priority-high');\r\n    dialog_todo_node_18.textContent = \"HIGH\";\r\n    dialog_todo_node_9.appendChild(dialog_todo_node_18);\r\n\r\n    var dialog_todo_node_20 = document.createElement('BUTTON');\r\n    dialog_todo_node_20.setAttribute('class', 'todo-creator');\r\n    dialog_todo_node_20.setAttribute('id', 'confirm');\r\n    dialog_todo_node_20.setAttribute('type', 'submit');\r\n    dialog_todo_node_20.setAttribute('value', 'default');\r\n    dialog_todo_node_5.appendChild(dialog_todo_node_20);\r\n\r\n    var dialog_todo_node_21 = document.createElement('IMG');\r\n    dialog_todo_node_21.setAttribute('src', './images/check.svg');\r\n    dialog_todo_node_21.setAttribute('alt', 'check-icon');\r\n    dialog_todo_node_20.appendChild(dialog_todo_node_21);\r\n\r\n    var dialog_todo_node_22 = document.createElement('BUTTON');\r\n    dialog_todo_node_22.setAttribute('class', 'cancel');\r\n    dialog_todo_node_22.setAttribute('id', 'cancel-create-todo');\r\n    dialog_todo_node_22.textContent = \"X\";\r\n    dialog_todo_node_5.appendChild(dialog_todo_node_22);\r\n  }\r\n  renderCreateProjectDialog () {\r\n    const childNodes = dialogPanel.childNodes;\r\n\r\n    Array.from(childNodes).forEach(child => {\r\n      dialogPanel.removeChild(child);\r\n    });\r\n\r\n    var dialog_project_node_2 = document.createElement('DIV');\r\n    dialog_project_node_2.setAttribute('class', 'project-text-input');\r\n    dialogPanel.appendChild(dialog_project_node_2);\r\n\r\n    var dialog_project_node_3 = document.createElement('TEXTAREA');\r\n    dialog_project_node_3.setAttribute('class', 'project-create-new-title');\r\n    dialog_project_node_3.setAttribute('id', 'edit-new-project-title');\r\n    dialog_project_node_3.setAttribute('name', 'new-project-title');\r\n    dialog_project_node_3.setAttribute('maxlength', '40');\r\n    dialog_project_node_3.setAttribute('placeholder', 'Project Title: Debugging the school\\'s LILO system');\r\n    dialog_project_node_3.setAttribute('required', '');\r\n    dialog_project_node_2.appendChild(dialog_project_node_3);\r\n\r\n    var dialog_project_node_4 = document.createElement('BUTTON');\r\n    dialog_project_node_4.setAttribute('class', 'project-creator');\r\n    dialog_project_node_4.setAttribute('id', 'confirm');\r\n    dialog_project_node_4.setAttribute('type', 'submit');\r\n    dialog_project_node_4.setAttribute('value', 'default');\r\n    dialogPanel.appendChild(dialog_project_node_4);\r\n\r\n    var dialog_project_node_5 = document.createElement('IMG');\r\n    dialog_project_node_5.setAttribute('src', './images/check.svg');\r\n    dialog_project_node_5.setAttribute('alt', 'check-icon');\r\n    dialog_project_node_4.appendChild(dialog_project_node_5);\r\n\r\n    var dialog_project_node_6 = document.createElement('BUTTON');\r\n    dialog_project_node_6.setAttribute('class', 'cancel');\r\n    dialog_project_node_6.setAttribute('id', 'cancel-create-project');\r\n    dialog_project_node_6.textContent = \"X\";\r\n    dialogPanel.appendChild(dialog_project_node_6);\r\n\r\n  }\r\n  renderCreateNoteDialog () {\r\n    const childNodes = dialogPanel.childNodes;\r\n\r\n    Array.from(childNodes).forEach(child => {\r\n      dialogPanel.removeChild(child);\r\n    });\r\n    \r\n    var dialog_note_node_2 = document.createElement('DIV');\r\n    dialog_note_node_2.setAttribute('class', 'note-text-input');\r\n    dialogPanel.appendChild(dialog_note_node_2);\r\n\r\n    var dialog_note_node_3 = document.createElement('TEXTAREA');\r\n    dialog_note_node_3.setAttribute('class', 'note-create-new-title');\r\n    dialog_note_node_3.setAttribute('id', 'edit-new-note-title');\r\n    dialog_note_node_3.setAttribute('name', 'new-note-title');\r\n    dialog_note_node_3.setAttribute('maxlength', '40');\r\n    dialog_note_node_3.setAttribute('placeholder', 'Note Title: My Summer Vacation Bucketlist');\r\n    dialog_note_node_3.setAttribute('required', '');\r\n    dialog_note_node_2.appendChild(dialog_note_node_3);\r\n\r\n    var dialog_note_node_4 = document.createElement('TEXTAREA');\r\n    dialog_note_node_4.setAttribute('class', 'note-create-new-description');\r\n    dialog_note_node_4.setAttribute('id', 'edit-new-note-description');\r\n    dialog_note_node_4.setAttribute('name', 'new-note-description');\r\n    dialog_note_node_4.setAttribute('maxlength', '1000');\r\n    dialog_note_node_4.setAttribute('placeholder', 'Description: These are the things I want to do this summer...');\r\n    //dialog_note_node_4.setAttribute('required', ''); --> should not be required can submit todo without a description\r\n    dialog_note_node_2.appendChild(dialog_note_node_4);\r\n\r\n    var dialog_note_node_5 = document.createElement('BUTTON');\r\n    dialog_note_node_5.setAttribute('class', 'note-creator');\r\n    dialog_note_node_5.setAttribute('id', 'confirm');\r\n    dialog_note_node_5.setAttribute('type', 'submit');\r\n    dialog_note_node_5.setAttribute('value', 'default');\r\n    dialogPanel.appendChild(dialog_note_node_5);\r\n\r\n    var dialog_note_node_6 = document.createElement('IMG');\r\n    dialog_note_node_6.setAttribute('src', './images/check.svg');\r\n    dialog_note_node_6.setAttribute('alt', 'check-icon');\r\n    dialog_note_node_5.appendChild(dialog_note_node_6);\r\n\r\n    var dialog_note_node_7 = document.createElement('BUTTON');\r\n    dialog_note_node_7.setAttribute('class', 'cancel');\r\n    dialog_note_node_7.setAttribute('id', 'cancel-create-note');\r\n    dialog_note_node_7.textContent = \"X\";\r\n    dialogPanel.appendChild(dialog_note_node_7);\r\n  }\r\n}\r\nconst dialogPopupOpen = new dialogPopupRender();\r\n/*-----Event Listener Functions-----*/\r\n/*---For Dialog Popup inputs---*/\r\nfunction cancelAdd(e) {\r\n  console.log(\"Adding canceled\");\r\n  e.preventDefault();\r\n  dialogCreateNew.close();\r\n}\r\nfunction submitTodo(e) {\r\n  e.preventDefault(); // Prevent the default form submission behavior\r\n  const inputtedTodoTitle = document.getElementById(\"edit-new-todo-title\").value;\r\n  const inputtedTodoDescription = document.getElementById(\"edit-new-todo-description\").value;\r\n  const inputtedTodoDueDate = document.getElementById(\"due-date\").value;\r\n  const inputtedTodoPriority = document.querySelector('input[name=todo-priority]:checked').value;\r\n  //initially this false, meaning not done/ongoing\r\n  const inputtedTodoStatus = false;\r\n  console.log(activeProjectCategoryTab);\r\n  //process values with what are extracted in the dialog to be added to todo object\r\n  const extractedTodoInput = createMainTodo(inputtedTodoTitle, inputtedTodoDescription, inputtedTodoDueDate, inputtedTodoPriority, inputtedTodoStatus);\r\n  if (!mainPanelWindow.match(projectTabIsActivePattern) && mainPanelWindow != \"MY HOME\" && mainPanelWindow != \"MY NOTES\") {\r\n    sortToCategory (mainTodos, extractedTodoInput, mainPanelWindow);\r\n    dialogCreateNew.close();\r\n    mainPanelOpen.todo();\r\n    \r\n    renderTodos (mainPanelWindow, mainTodos);\r\n  } else if (mainPanelWindow.match(projectTabIsActivePattern) && mainPanelWindow != \"MY HOME\" && mainPanelWindow != \"MY NOTES\") {\r\n    sortToCategory (mainTodos, extractedTodoInput, activeProjectCategoryTab);\r\n    dialogCreateNew.close();\r\n    mainPanelOpen.todo();\r\n    // save todos to local storage\r\n    localStorage.setItem(\"mainTodos\", JSON.stringify(mainTodos));\r\n    renderTodos (activeProjectCategoryTab, mainTodos);\r\n  }\r\n}\r\nfunction submitProject(e) {\r\n  e.preventDefault(); // Prevent the default form submission behavior\r\n  const inputtedProjetTitle = document.getElementById(\"edit-new-project-title\").value;\r\n  console.log(inputtedProjetTitle);\r\n  console.log(\"project title submitted successfully\");\r\n  dialogCreateNew.close();\r\n  const todoCategories = Object.keys(mainTodos);\r\n  if (!todoCategories.includes(inputtedProjetTitle.toLowerCase())) {\r\n    mainTodos[`${inputtedProjetTitle.toLowerCase()}`] = [];\r\n    // save todos to local storage\r\n    localStorage.setItem(\"mainTodos\", JSON.stringify(mainTodos));\r\n    createProjectTab (mainTodos);\r\n  }\r\n}\r\nfunction submitNote (e) {\r\n  e.preventDefault(); // Prevent the default form submission behavior\r\n  const inputtedNoteTitle = document.getElementById(\"edit-new-note-title\").value;\r\n  const inputtedNoteDescription = document.getElementById(\"edit-new-note-description\").value;\r\n  console.log(inputtedNoteTitle);\r\n  console.log(inputtedNoteDescription);\r\n  console.log(\"note title and note description submitted successfully\");\r\n  \r\n  notes.push(createNote(inputtedNoteTitle, inputtedNoteDescription).mainNoteObject());\r\n  //save to local storage\r\n  localStorage.setItem(\"notes\", JSON.stringify(notes));\r\n  const childNodes = mainPanel.childNodes;\r\n  \r\n  Array.from(childNodes).forEach(child => {\r\n    mainPanel.removeChild(child);\r\n  });\r\n  notes.forEach(function(note, index) {\r\n    //console.log(entry);\r\n    displayNoteCatalogEntry (index, note.title, note.description);\r\n  });\r\n  //view or edit note details dialog\r\n  viewOrEditNoteDetails ();\r\n  //close view or edit note details dialog\r\n  closeNoteDetails ();\r\n  //delete note entry\r\n  deleteNoteCatalog (notes);\r\n  //submit and reflect note edit form\r\n  submitEditNoteForm (notes);\r\n\r\n  dialogCreateNew.close();\r\n}\r\n/*---For Todo Catalogs---*/\r\nfunction submitEditTodo(e, index, currentTodoObject) {\r\n  const dialogEditTodo = document.querySelector(`#edit-todo-entry${index}`);\r\n  e.preventDefault(); // Prevent the default form submission behavior\r\n  const modifiedTodoTitle = document.getElementById(`edit-todo-entry${index}-title`).value;\r\n  const modifiedTodoDescription = document.getElementById(`edit-todo-entry${index}-description`).value;\r\n  const modifiedTodoDueDate = document.getElementById(`edit-todo-entry${index}-due-date`).value;\r\n  const modifiedTodoPriority = document.querySelector(`input[name=edit-todo-entry${index}-priority]:checked`).value;\r\n  console.log(index);\r\n  const currentTodoObjectIteration = currentTodoObject[index];\r\n  \r\n  if (currentTodoObject[index].title != modifiedTodoTitle) {\r\n    currentTodoObject[index].title = modifiedTodoTitle;\r\n  } else {console.log(\"Title not edited\");}\r\n  if (currentTodoObject[index].description != modifiedTodoDescription) {\r\n    currentTodoObject[index].description = modifiedTodoDescription;\r\n  } else {console.log(\"Description not edited\");}\r\n  if (currentTodoObject[index].date != modifiedTodoDueDate) {\r\n    currentTodoObject[index].date = modifiedTodoDueDate;\r\n  } else {console.log(\"Due date not edited\");}\r\n  if (currentTodoObject[index].priority != modifiedTodoPriority) {\r\n    currentTodoObject[index].priority = modifiedTodoPriority;\r\n  } else {console.log(\"Priority Level not edited\");}\r\n  sortTodo(mainTodos);\r\n  // save todos to local storage\r\n  //localStorage.setItem(\"mainTodos\", JSON.stringify(mainTodos));\r\n  const childNodes = mainPanel.childNodes;\r\n  \r\n  Array.from(childNodes).forEach(child => {\r\n    mainPanel.removeChild(child);\r\n  });\r\n  currentTodoObject.forEach(function(entry, index) {\r\n    //console.log(entry);\r\n    let category = `${todoCategory}`;\r\n    displayTodoCatalogEntry (index, entry.title, entry.date, category, entry.description, entry.priority, entry.status);\r\n  });\r\n  openTodoDetails ();\r\n  //todo entry details dialog close\r\n  closeTodoDetails ();\r\n  //Change class if checkbox is toggled\r\n  checkboxChecker (currentTodoObject);\r\n  //todo entry delete catalog button\r\n  deleteTodoCatalog (currentTodoObject);\r\n  //edit todo entry popup\r\n  openEditTodoDetails ();\r\n  //todo edit dialog close\r\n  closeEditTodoDetails ();\r\n  //todo edit form submit\r\n  submitEditTodoForm (currentTodoObject);\r\n  dialogEditTodo.close();\r\n}\r\n//todo entry details dialog open with eventlistener\r\nfunction openTodoDetails () {\r\n  const showTodoDetailsBtns = document.querySelectorAll('.todo-catalog-view-details-btn');\r\n  showTodoDetailsBtns.forEach(function(showTodoDetailsBtn, index) {\r\n    const dialogTodoDetails = document.querySelector(`#todo-entry${index}-details`);\r\n    showTodoDetailsBtn.addEventListener(\"click\", function(e) {\r\n      e.preventDefault();\r\n      dialogTodoDetails.showModal();\r\n    });\r\n  });\r\n}\r\n//todo entry details dialog close with eventlistener\r\nfunction closeTodoDetails () {\r\n  const closeTodoDetailsBtns = document.querySelectorAll('.close-todo-details-btn');\r\n  closeTodoDetailsBtns.forEach(function(closeTodoDetailsBtn, index) {\r\n    const dialogTodoDetails = document.querySelector(`#todo-entry${index}-details`);\r\n    closeTodoDetailsBtn.addEventListener(\"click\", function(e) {\r\n      e.preventDefault();\r\n      dialogTodoDetails.close();\r\n      });\r\n  });\r\n}\r\n//Change class if checkbox is toggled\r\nfunction checkboxChecker (currentTodoObject) {\r\n  const todoEntryCheckBoxes = document.querySelectorAll(\"input[type=checkbox]\");\r\n        //console.log(todoEntryCheckBoxes);\r\n  todoEntryCheckBoxes.forEach(function (todoEntryCheckBox, index) {\r\n    todoEntryCheckBox.addEventListener('change', function(e) {\r\n      if (this.checked) {\r\n        console.log(\"Checkbox is checked..\");\r\n        const checkedbox = e.target;\r\n        //console.log(checkedbox);\r\n\r\n        //get all childNodes of todo catalog entry\r\n        const toLineThroughEntryChildren = checkedbox.parentNode.childNodes;\r\n        //Run through each childnodes\r\n        toLineThroughEntryChildren.forEach(function(toLineThroughEntryChild, index) {\r\n          if(toLineThroughEntryChild.classList.contains('todo-catalog-title-default')) {\r\n            //change class to strikethrough once box is checked\r\n            toLineThroughEntryChild.classList.remove('todo-catalog-title-default');\r\n            toLineThroughEntryChild.classList.add('todo-catalog-title-checked');\r\n            for (let i = 0; i < currentTodoObject.length; i++) {\r\n              if(currentTodoObject[i].title == toLineThroughEntryChild.textContent) {\r\n                //change status to true => meaning checked\r\n                currentTodoObject[i].status = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n          console.log(\"Checkbox is not checked..\");\r\n          const uncheckedbox = e.target;\r\n          //console.log(uncheckedbox);\r\n\r\n          //get all childNodes of todo catalog entry\r\n          const toLineThroughEntryChildren = uncheckedbox.parentNode.childNodes;\r\n          //Run through each childnodes\r\n          toLineThroughEntryChildren.forEach(function(toLineThroughEntryChild, index) {\r\n            if(toLineThroughEntryChild.classList.contains('todo-catalog-title-checked')) {\r\n              //change class to strikethrough once box is checked\r\n              toLineThroughEntryChild.classList.remove('todo-catalog-title-checked');\r\n              toLineThroughEntryChild.classList.add('todo-catalog-title-default');\r\n                  \r\n              for (let i = 0; i < currentTodoObject.length; i++) {\r\n                if(currentTodoObject[i].title == toLineThroughEntryChild.textContent) {\r\n                  //change status to true => meaning checked\r\n                  currentTodoObject[i].status = false;\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n        sortTodo(mainTodos);\r\n        const childNodes = mainPanel.childNodes;\r\n      \r\n        Array.from(childNodes).forEach(child => {\r\n          mainPanel.removeChild(child);\r\n        });\r\n        currentTodoObject.forEach(function(entry, index) {\r\n          //console.log(entry);\r\n          let category = `${todoCategory}`;\r\n          displayTodoCatalogEntry (index, entry.title, entry.date, category, entry.description, entry.priority, entry.status);\r\n        });\r\n        openTodoDetails ();\r\n        //todo entry details dialog close\r\n        closeTodoDetails ();\r\n        //Change class if checkbox is toggled\r\n        checkboxChecker (currentTodoObject);\r\n        //todo entry delete catalog button\r\n        deleteTodoCatalog (currentTodoObject);\r\n        //edit todo entry popup\r\n        openEditTodoDetails ();\r\n        //todo edit dialog close\r\n        closeEditTodoDetails ();\r\n        //todo edit form submit\r\n        submitEditTodoForm (currentTodoObject);\r\n      });\r\n  });\r\n  \r\n}\r\n//todo entry delete catalog button\r\nfunction deleteTodoCatalog (currentTodoObject) {\r\n  const deleteTodoBtns = document.querySelectorAll('.todo-entry-delete-button');\r\n  deleteTodoBtns.forEach(function(deleteTodoBtn, index) {\r\n    deleteTodoBtn.addEventListener(\"click\", function(e) {\r\n      \r\n      const clickedDelete = e.target;\r\n      const clickedTodoEntry = clickedDelete.parentNode.id;\r\n      const tobeRemovedTodoCatalog = document.getElementById(`${clickedTodoEntry}`);\r\n  \r\n      //get all childNodes of todo catalog entry\r\n      const clickedTodoEntryChildren = clickedDelete.parentNode.childNodes;\r\n      //splice respective entry on object\r\n      clickedTodoEntryChildren.forEach(function(clickedTodoEntryChild, index) {\r\n        if(clickedTodoEntryChild.classList.contains('todo-catalog-title-default')||\r\n        clickedTodoEntryChild.classList.contains('todo-catalog-title-checked')) {\r\n          //console.log(clickedTodoEntryChild);\r\n          //console.log(clickedTodoEntryChild.textContent);\r\n          for (let i = 0; i < currentTodoObject.length; i++) {\r\n            if(currentTodoObject[i].title == clickedTodoEntryChild.textContent) {\r\n              console.log(`Successfully removed ${currentTodoObject[i]} entry`);\r\n              currentTodoObject.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n      });\r\n      //save to local storage\r\n      localStorage.setItem(\"notes\", JSON.stringify(notes));\r\n      \r\n      mainPanel.removeChild(tobeRemovedTodoCatalog);\r\n      console.log(currentTodoObject);\r\n      const childNodes = mainPanel.childNodes;\r\n\r\n      Array.from(childNodes).forEach(child => {\r\n        mainPanel.removeChild(child);\r\n      });\r\n      currentTodoObject.forEach(function(entry, index) {\r\n        //console.log(entry);\r\n        let category = `${todoCategory}`;\r\n        displayTodoCatalogEntry (index, entry.title, entry.date, category, entry.description, entry.priority, entry.status);\r\n      });\r\n      openTodoDetails ();\r\n      //todo entry details dialog close\r\n      closeTodoDetails ();\r\n      //Change class if checkbox is toggled\r\n      checkboxChecker (currentTodoObject);\r\n      //todo entry delete catalog button\r\n      deleteTodoCatalog (currentTodoObject);\r\n      //edit todo entry popup\r\n      openEditTodoDetails ();\r\n      //todo edit dialog close\r\n      closeEditTodoDetails ();\r\n      //todo edit form submit\r\n      submitEditTodoForm (currentTodoObject);\r\n    });\r\n  });\r\n}\r\n//edit todo entry popup open \r\nfunction openEditTodoDetails () {\r\n  const editTodoBtns = document.querySelectorAll('.todo-entry-edit-button');\r\n  editTodoBtns.forEach(function(editTodoBtn, index) {\r\n    const dialogEditTodo = document.querySelector(`#edit-todo-entry${index}`);\r\n    editTodoBtn.addEventListener(\"click\", function(e) {\r\n      const toEditCatalogEntryElements = editTodoBtn.parentNode.childNodes;\r\n      //const dialogEditTodo = document.querySelector(`#edit-todo-entry`);\r\n      //console.log(dialogEditTodo);\r\n      e.preventDefault();\r\n      dialogEditTodo.showModal();\r\n    });\r\n  });\r\n}\r\n//todo edit form submit\r\nfunction submitEditTodoForm (currentTodoObject) {\r\n  const EditTodoForms = document.querySelectorAll('.edit-todo-popup-form');\r\n  EditTodoForms.forEach(function(EditTodoForm, index) {\r\n    //console.log(EditTodoForm);\r\n    EditTodoForm.removeEventListener('submit', submitEditTodo);\r\n    EditTodoForm.addEventListener(\"submit\", (e) => submitEditTodo(e, index, currentTodoObject));\r\n  });\r\n}\r\n//edit todo entry popup close\r\nfunction closeEditTodoDetails () {\r\n  const closeEditBtns = document.querySelectorAll('#cancel-edit-todo');\r\n  closeEditBtns.forEach(function(closeEditBtn, index) {\r\n    const dialogEditTodo = document.querySelector(`#edit-todo-entry${index}`);\r\n    closeEditBtn.addEventListener(\"click\", function(e) {\r\n      e.preventDefault();\r\n      dialogEditTodo.close();\r\n    });\r\n  });\r\n}\r\n/*---Note Catalogs---*/\r\n//submit edit note form\r\nfunction submitEditNote(e, index, notes) {\r\n  const dialogViewOrEditNote = document.querySelector(`#edit-note-entry${index}`);\r\n  e.preventDefault(); // Prevent the default form submission behavior\r\n  const modifiedNoteTitle = document.getElementById(`edit-note-entry${index}-title`).value;\r\n  const modifiedNoteDescription = document.getElementById(`edit-note-entry${index}-description`).value;\r\n  console.log(index);\r\n  const currentNoteObjectIteration = notes[index];\r\n  \r\n  if (notes[index].title != modifiedNoteTitle) {\r\n    notes[index].title = modifiedNoteTitle;\r\n  } else {console.log(\"Title not edited\");}\r\n  if (notes[index].description != modifiedNoteDescription) {\r\n    notes[index].description = modifiedNoteDescription;\r\n  } else {console.log(\"Description not edited\");}\r\n  //save to local storage\r\n  localStorage.setItem(\"notes\", JSON.stringify(notes));\r\n  const childNodes = mainPanel.childNodes;\r\n\r\n  Array.from(childNodes).forEach(child => {\r\n    mainPanel.removeChild(child);\r\n  });\r\n  notes.forEach(function(note, index) {\r\n    //console.log(entry);\r\n    displayNoteCatalogEntry (index, note.title, note.description);\r\n  });\r\n  //view or edit note details dialog\r\n  viewOrEditNoteDetails ();\r\n  //close view or edit note details dialog\r\n  closeNoteDetails ();\r\n  //delete note entry\r\n  deleteNoteCatalog (notes);\r\n  //submit and reflect note edit form\r\n  submitEditNoteForm (notes);\r\n  dialogViewOrEditNote.close();\r\n}\r\n//view and/or edit note catalog entry\r\nfunction viewOrEditNoteDetails () {\r\n  const viewOrEditNoteBtns = document.querySelectorAll('.view-note');\r\n  viewOrEditNoteBtns.forEach(function(viewOrEditNoteBtn, index) {\r\n    const dialogViewOrEditNote = document.querySelector(`#edit-note-entry${index}`);\r\n    viewOrEditNoteBtn.addEventListener(\"click\", function(e) {\r\n      //const toEditCatalogEntryElements = editTodoBtn.parentNode.childNodes;\r\n      e.preventDefault();\r\n      dialogViewOrEditNote.showModal();\r\n    });\r\n  });\r\n}\r\n//close view/cancel edit note catalog entry\r\nfunction closeNoteDetails () {\r\n  const closeViewNoteBtns = document.querySelectorAll('.note-cancel-edit-btn');\r\n  closeViewNoteBtns.forEach(function(closeViewNoteBtn, index) {\r\n    const dialogViewOrEditNote = document.querySelector(`#edit-note-entry${index}`);\r\n    closeViewNoteBtn.addEventListener(\"click\", function(e) {\r\n      //const toEditCatalogEntryElements = editTodoBtn.parentNode.childNodes;\r\n      e.preventDefault();\r\n      dialogViewOrEditNote.close();\r\n    });\r\n  });\r\n}\r\n//delete note entry\r\nfunction deleteNoteCatalog (notes) {\r\n  const deleteNoteBtns = document.querySelectorAll('.delete-note');\r\n  deleteNoteBtns.forEach(function(deleteNoteBtn, index) {\r\n    deleteNoteBtn.addEventListener(\"click\", function(e) {\r\n      \r\n      const clickedDelete = e.target;\r\n      const clickedNoteEntry = clickedDelete.parentNode.parentNode.id;\r\n      const tobeRemovedNoteCatalog = document.getElementById(`${clickedNoteEntry}`);\r\n      //console.log(tobeRemovedNoteCatalog);\r\n      //get all childNodes of todo catalog entry\r\n      const clickedNoteEntryChildren = clickedDelete.parentNode.parentNode.childNodes;\r\n      //splice respective entry on notes\r\n      clickedNoteEntryChildren.forEach(function(clickedNoteEntryChild, index) {\r\n        if(clickedNoteEntryChild.classList.contains('note-title')) {\r\n          //console.log(clickedNoteEntryChild);\r\n          //console.log(clickedNoteEntryChild.textContent);\r\n          for (let i = 0; i < notes.length; i++) {\r\n            if(notes[i].title == clickedNoteEntryChild.textContent) {\r\n              console.log(notes[i], \" removed\");\r\n              notes.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n      });\r\n      //save to local storage\r\n      localStorage.setItem(\"notes\", JSON.stringify(notes));\r\n      \r\n      mainPanel.removeChild(tobeRemovedNoteCatalog);\r\n      console.log(notes);\r\n      const childNodes = mainPanel.childNodes;\r\n\r\n      Array.from(childNodes).forEach(child => {\r\n        mainPanel.removeChild(child);\r\n      });\r\n      notes.forEach(function(note, index) {\r\n        //console.log(entry);\r\n        displayNoteCatalogEntry (index, note.title, note.description);\r\n      });\r\n      //view or edit note details dialog\r\n    viewOrEditNoteDetails ();\r\n    //close view or edit note details dialog\r\n    closeNoteDetails ();\r\n    //delete note entry\r\n    deleteNoteCatalog (notes);\r\n    //submit and reflect note edit form\r\n    submitEditNoteForm (notes);\r\n    });\r\n  });\r\n}\r\n//note edit form submit\r\nfunction submitEditNoteForm (notes) {\r\n  const EditNoteForms = document.querySelectorAll('.edit-note-popup-form');\r\n  EditNoteForms.forEach(function(EditNoteForm, index) {\r\n    //console.log(EditTodoForm);\r\n    EditNoteForm.removeEventListener('submit', submitEditNote);\r\n    EditNoteForm.addEventListener(\"submit\", (e) => submitEditNote(e, index, notes));\r\n  });\r\n}\r\n/*---Date Sorting/Format Functions---*/\r\n//check dates for current week\r\nfunction checkDatesInThisWeek() {\r\n  const dateObject = new Date();\r\n  const dateToday = dateObject.getDate();\r\n  const dayToday = dateObject.getDay();\r\n\r\n  // get first date of week\r\n  const firstDayOfWeek = new Date(dateObject.setDate(dateToday - dayToday)); //will always be equal to zero, getting sunday [Day 0 of the week]\r\n\r\n  //get all days of the week\r\n  const datesOfTheWeek = [];\r\n  for (let i = 0; i < 7; i++) {\r\n    const currentDay = new Date(firstDayOfWeek);\r\n    currentDay.setDate(firstDayOfWeek.getDate() + i); // Set the date of lastDayOfWeek to 6 days after firstDayOfWeek\r\n    datesOfTheWeek.push(currentDay);\r\n  }\r\n    \r\n  return datesOfTheWeek;\r\n}\r\n//format date as YYYY-MM-DD\r\nfunction formatDateYYYYMMDD(date) {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  return `${year}-${month}-${day}`;\r\n}\r\n//get date from string\r\nfunction getDateFromString(extractedDate) {\r\n  // Split the string into parts\r\n  const [year, month, day] = extractedDate.split('-').map(Number);\r\n  \r\n  // Create and return a new Date object (Note: Months are 0-based in JavaScript)\r\n  return new Date(year, month - 1, day);\r\n}\r\n\r\n/*-----Summary/Sorting Functions*/\r\n//to submit on the right key depending on what is the current active tab when the create button was clicked\r\nfunction sortToCategory (mainTodos, extractedTodoInput, currentMainPanelWindow) {\r\n  //For use to loop through keys of mainTodos => categories\r\n  const todoCategories = Object.keys(mainTodos);\r\n  for (todoCategory of todoCategories) {\r\n    const todoCategoryPattern = new RegExp(currentMainPanelWindow, 'i');\r\n    const isKeyThere = `${todoCategory}` in mainTodos;\r\n    if (todoCategory.match(todoCategoryPattern) && isKeyThere == true) {\r\n      mainTodos[`${todoCategory}`].push(extractedTodoInput.mainTodoObject());\r\n      console.log(extractedTodoInput);\r\n      console.log(`Added to ${todoCategory} please check updated object below`);\r\n      console.log(mainTodos);\r\n    } else if (!todoCategory.match(todoCategoryPattern) && isKeyThere == true) {console.log(`${todoCategory} is currently not the designated category of todo to be added`);\r\n    } else if (!todoCategory.match(todoCategoryPattern) && isKeyThere == false) {console.log(\"No category for currently active tab in mainTodos Object\");}\r\n  }\r\n}\r\n//sort todo entries\r\nfunction sortTodo (mainTodos) {\r\n  const projects = Object.keys(mainTodos); //keys of mainTodos->projects\r\n  const today = new Date();\r\n  const thisWeekDatesFormatted = []; //to get days of this week\r\n\r\n  const thisWeekDates = checkDatesInThisWeek();\r\n  thisWeekDates.forEach(thisWeekDate => {\r\n    thisWeekDatesFormatted.push(formatDateYYYYMMDD(thisWeekDate));\r\n  });\r\n  \r\n    projects.forEach(project => {\r\n      //console.log(project);\r\n      if (project == \"today\" || project == \"week\" || project == \"general\" || project == \"overdue\") {\r\n        const currentObject = mainTodos[`${project}`];\r\n        for (let i = 0; i<currentObject.length; i++) {\r\n\r\n          if(currentObject[i].status==true && project == \"overdue\") {\r\n            //console.log(currentObject[i]);\r\n            //return to today, week or general\r\n            if ((getDateFromString(currentObject[i].date).getFullYear() == today.getFullYear()) &&\r\n            (getDateFromString(currentObject[i].date).getMonth() == today.getMonth()) &&\r\n            (getDateFromString(currentObject[i].date).getDate() == today.getDate())) {\r\n              mainTodos['today'].push(currentObject[i]);\r\n              currentObject.splice(i,1);\r\n            } else if(thisWeekDatesFormatted.includes(currentObject[i].date)) {\r\n              mainTodos['week'].push(currentObject[i]);\r\n              currentObject.splice(i,1);\r\n            } else {\r\n              mainTodos['general'].push(currentObject[i]);\r\n              currentObject.splice(i,1);\r\n            }\r\n          } else if ((getDateFromString(currentObject[i].date).getFullYear() == today.getFullYear()) &&\r\n          (getDateFromString(currentObject[i].date).getMonth() == today.getMonth()) &&\r\n          (getDateFromString(currentObject[i].date).getDate() == today.getDate())) {\r\n            mainTodos['today'].push(currentObject[i]);\r\n            currentObject.splice(i,1);\r\n          } else if ((getDateFromString(currentObject[i].date) < today) \r\n            && currentObject[i].status==false\r\n            && ((project == 'today') || (project == 'week') || (project == 'general'))) { //sorts todo to overdue if it is beyond due date and not yet finished\r\n              mainTodos['overdue'].push(currentObject[i]);\r\n              currentObject.splice(i,1);\r\n          } else if(thisWeekDatesFormatted.includes(currentObject[i].date)) {\r\n            mainTodos['week'].push(currentObject[i]);\r\n            currentObject.splice(i,1);\r\n          } else if (getDateFromString(currentObject[i].date) > today || \r\n          ((getDateFromString(currentObject[i].date) < today) && currentObject[i].status==true)\r\n          && ((project == 'today') || (project == 'week') || (project == 'overdue'))) {\r\n            mainTodos['general'].push(currentObject[i]);\r\n            currentObject.splice(i,1);\r\n          }\r\n        }\r\n      }\r\n    });\r\n    \r\n    console.log(mainTodos);\r\n    //save to local storage\r\n    localStorage.setItem(\"mainTodos\", JSON.stringify(mainTodos));\r\n}\r\n//calculate total notes and todo entries\r\nfunction calcSummary (mainTodos, notes) {\r\n  const projects = Object.keys(mainTodos); //keys of mainTodos->projects\r\n  const today = new Date();\r\n  const totalProjects = projects.length-3; //total projects excluding overdue, today and week keys\r\n  const totalNotes = notes.length; //total notes\r\n  const thisWeekDatesFormatted = []; //to get days of this week\r\n  let totalTodoThisWeek = 0;\r\n  let totalTodoDone = 0;\r\n  let totalOverdueTasks = 0;\r\n  let totalTasksToday = 0;\r\n\r\n  const thisWeekDates = checkDatesInThisWeek();\r\n  thisWeekDates.forEach(thisWeekDate => {\r\n    thisWeekDatesFormatted.push(formatDateYYYYMMDD(thisWeekDate));\r\n  });\r\n  \r\n    projects.forEach(project => {\r\n      const currentObject = mainTodos[`${project}`];\r\n      for (let i = 0; i<currentObject.length; i++) {\r\n        if(currentObject[i].status==true) {\r\n          totalTodoDone++; //overall tasks done\r\n        } \r\n        \r\n        if ((getDateFromString(currentObject[i].date).getFullYear() == today.getFullYear()) &&\r\n        (getDateFromString(currentObject[i].date).getMonth() == today.getMonth()) &&\r\n        (getDateFromString(currentObject[i].date).getDate() == today.getDate())) {\r\n          totalTasksToday++;//total tasks today\r\n        } else if ((getDateFromString(currentObject[i].date) < today) && currentObject[i].status==false) { //sorts todo to overdue if it is beyond due date and not yet finished\r\n          //console.log(currentObject[i]);\r\n          totalOverdueTasks++;//total tasks overdue\r\n\r\n        } \r\n        \r\n        if(thisWeekDatesFormatted.includes(currentObject[i].date)) {\r\n          //console.log(currentObject[i]);\r\n          totalTodoThisWeek++; //total tasks this week\r\n\r\n        }\r\n      }\r\n    });\r\n  return {\r\n    \"totalTodoDone\": totalTodoDone,\r\n    \"totalTasksToday\": totalTasksToday,\r\n    \"totalOverdueTasks\": totalOverdueTasks,\r\n    \"totalTodoThisWeek\": totalTodoThisWeek,\r\n    \"totalProjects\": totalProjects,\r\n    \"totalNotes\": totalNotes\r\n  }\r\n}\n\n//# sourceURL=webpack://todo-list/./src/functions.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functions.js */ \"./src/functions.js\");\n//import functions\r\n\r\n\r\n/*---------------------------------------------------------------------------START of PROGRAM---------------------------------------------------------------------------*/\r\n//variable declarations for dialog for creating new todo, project and note\r\nconst openCreate = document.getElementById(\"adder\");\r\nconst dialogCreateNewForm = document.querySelector(\"#create-task-dialog\");\r\nconst dialogCreateNew = document.getElementById(\"create-task\");\r\nconst dialogNavigationBtns = document.querySelectorAll(\".create-new-menu\");\r\nconst dialogAddTodoBtn = document.querySelector(\"#create-new-selection1\");\r\nconst dialogAddProjectBtn = document.querySelector(\"#create-new-selection2\");\r\nconst dialogAddNoteBtn = document.querySelector(\"#create-new-selection3\");\r\nconst dialogPopupOpen = new _functions_js__WEBPACK_IMPORTED_MODULE_0__.dialogPopupRender();\r\n//variable declarations for main panel\r\nconst mainPanelNavigationBtns = document.querySelectorAll(\".main-panel-menu, .main-panel-menu-projects\");\r\nconst mainPanelHomeBtn = document.querySelector(\"#main-panel-selection1\");\r\nconst mainPanelTodayBtn = document.querySelector(\"#main-panel-selection2\");\r\nconst mainPanelWeekBtn = document.querySelector(\"#main-panel-selection3\");\r\nconst mainPanelNoteBtn = document.querySelector(\"#main-panel-selection4\");\r\nconst mainPanelOverdueBtn= document.querySelector(\"#main-panel-selection6\");\r\nconst mainPanelGeneralBtn= document.querySelector(\"#main-panel-selection7\");\r\nconst mainPanelOpen = new _functions_js__WEBPACK_IMPORTED_MODULE_0__.mainPanelRender();\r\n  \r\n//parse on local storage or create empty new mainTodos and notes\r\nconst mainTodos = JSON.parse(localStorage.getItem('mainTodos')) || {\r\n  \"today\" : [],\r\n  \"week\" : [],\r\n  \"overdue\" : [],\r\n  \"general\" : []\r\n}\r\n\r\n//const projectTodos = JSON.parse(localStorage.getItem('projectTodos')) || [];\r\nconst notes = JSON.parse(localStorage.getItem('notes')) || [];\r\n\r\n//create a mock details if no object found on local storage\r\nif (!localStorage.getItem('mainTodos')) { \r\n  //mainTodos.today.push(createMainTodo(inputtedTodoTitle, inputtedTodoDescription, inputtedTodoDueDate, inputtedTodoPriority, inputtedTodoStatus).mainTodoObject());\r\n  mainTodos.today.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"House Chores\", \"Water the plants, clean the bathroom and make the bed\", \"2024-05-21\", \"LOW\", false).mainTodoObject());\r\n  mainTodos.today.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"Get Haircut\", \"\", \"2024-05-22\", \"MID\", false).mainTodoObject());\r\n  mainTodos.today.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"Javascript Self-Learning\", \"Continue project: To-do list production testing and incorporate bug fixes if needed\", \"2024-05-23\", \"HIGH\", true).mainTodoObject());\r\n  \r\n  mainTodos.week.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"Do Grocery\", \"Buy 2 canned tuna, 1 carton milk and 2kg chicken\", \"2024-05-19\", \"MID\", false).mainTodoObject());\r\n  mainTodos.week.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"Laundry\", \"Deliver laundry at 9AM then pickup at 5:30PM\", \"2024-07-05\", \"HIGH\", true).mainTodoObject());\r\n  mainTodos.week.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"Doctor's Appointment\", \"Go to dermatologist appointment, bring medical records\", \"2024-05-27\", \"LOW\", false).mainTodoObject());\r\n\r\n  mainTodos[\"gym\"] = [];\r\n  mainTodos.gym.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"BB Grocery\", \"Buy Protein Shake at Shoppee\", \"2024-06-10\", \"HIGH\", true).mainTodoObject());\r\n  mainTodos.gym.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"Meal Prep\", \"Prepare meal prep for this week\", \"2024-07-02\", \"LOW\", false).mainTodoObject());\r\n  mainTodos.gym.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"Statistics Update\", \"Weigh in then update calorie intaks\", \"2024-06-15\", \"LOW\", false).mainTodoObject());\r\n\r\n  mainTodos[\"work\"] = [];\r\n  mainTodos.work.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"Script\", \"Create script request of client for SEO\", \"2024-06-13\", \"HIGH\", true).mainTodoObject());\r\n  mainTodos.work.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"Ticket CleanUp\", \"Dobule check unresolved tickets from last week\", \"2024-06-21\", \"LOW\", false).mainTodoObject());\r\n  mainTodos.work.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"1-on-1\", \"1 on 1 discussion with Boss\", \"2024-06-18\", \"HIGH\", false).mainTodoObject());\r\n\r\n  mainTodos[\"school\"] = [];\r\n  mainTodos.school.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"Lecture 1\", \"Finish Lecture 1 on Engr Management\", \"2024-06-25\", \"MID\", true).mainTodoObject());\r\n  mainTodos.school.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"Thesis\", \"Prepare thesis title and chapter 1-3\", \"2024-06-22\", \"HIGH\", false).mainTodoObject());\r\n  mainTodos.school.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createMainTodo)(\"Add Course\", \"Add 3 more units to next sem target courses\", \"2024-06-27\", \"HIGH\", false).mainTodoObject());\r\n}\r\n\r\nif(!localStorage.getItem('notes')) {\r\n  notes.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createNote)(\"Leave Balance\", \"Current Spend:\\n2 VL, 4 FB, 0 SL\\n0 BL\").mainNoteObject());\r\n  notes.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createNote)(\"Country Wishlist\", \"Japan\\nVietnam\\nTaiwan\").mainNoteObject());\r\n  notes.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createNote)(\"Local Travel Wishlist\", \"La Union\\nVigan\\nSiargao\\nPuerto Princesa\\nBoracay\\nBaguio\\nCamSur\").mainNoteObject());\r\n  notes.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createNote)(\"2025 Goals\", \"Take the boards\\nGo for a 6-digits job\\nBuy more sneakers\").mainNoteObject());\r\n  notes.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createNote)(\"Macros\", \"160g Protein\\n237g Carbs\\n31g Fat\\n1900 calories\").mainNoteObject());\r\n  notes.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createNote)(\"Work Notes\", \"Cultural Training - July1\\nSubmit doc for performance review - July 3\\nTalent Review - September\").mainNoteObject());\r\n  notes.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createNote)(\"Leave Balance Copy\", \"Current Spend:\\n2 VL, 4 FB, 0 SL\\n0 BL\").mainNoteObject());\r\n  notes.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createNote)(\"Country Wishlist Copy\", \"Japan\\nVietnam\\nTaiwan\").mainNoteObject());\r\n  notes.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createNote)(\"Local Travel Wishlist Copy\", \"La Union\\nVigan\\nSiargao\\nPuerto Princesa\\nBoracay\\nBaguio\\nCamSur\").mainNoteObject());\r\n  notes.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createNote)(\"2025 Goals Copy\", \"Take the boards\\nGo for a 6-digits job\\nBuy more sneakers\").mainNoteObject());\r\n  notes.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createNote)(\"Macros Copy\", \"160g Protein\\n237g Carbs\\n31g Fat\\n1900 calories\").mainNoteObject());\r\n  notes.push((0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createNote)(\"Work Notes Copy\", \"Cultural Training - July1\\nSubmit doc for performance review - July 3\\nTalent Review - September\").mainNoteObject());\r\n}\r\n//Create project tabs initially parsed or created\r\n(0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.createProjectTab) (mainTodos);\r\n\r\nlet mainPanelWindow = null;\r\nlet activeProjectCategoryTab = null;\r\nconst projectTabIsActivePattern = new RegExp(\"projects\", 'i');\r\n/*MAIN PANEL*/\r\n//Render home summary upon open of page\r\nmainPanelOpen.homeSummary(mainTodos, notes);\r\nmainPanelHomeBtn.classList.add('main-panel-menu-active');\r\n//adding event listener to main nav bar\r\nmainPanelNavigationBtns.forEach(function(mainPanelNavigationBtn, index) {\r\n  mainPanelNavigationBtn.addEventListener(\"click\", function() {\r\n    //To know which tab is active\r\n      mainPanelWindow = mainPanelNavigationBtn.textContent;\r\n      //console.log(mainPanelWindow);\r\n      //to clear -active class on project tab category\r\n      const projectCategoryTabs = document.querySelectorAll(\".main-panel-menu-projects-item\");\r\n      if (mainPanelWindow == \"MY HOME\") {\r\n      console.log(mainPanelWindow+\" menu active again\");\r\n        //change class to main-panel-menu-active of TODO nav button and clears active class for others if switched from them\r\n        if (!mainPanelHomeBtn.classList.add('main-panel-menu-active') && \r\n            (mainPanelTodayBtn.classList.contains('main-panel-menu-active')||\r\n              mainPanelWeekBtn.classList.contains('main-panel-menu-active')||\r\n              mainPanelNoteBtn.classList.contains('main-panel-menu-active')||\r\n              mainPanelOverdueBtn.classList.contains('main-panel-menu-active')||\r\n              mainPanelGeneralBtn.classList.contains('main-panel-menu-active'))) {\r\n              mainPanelHomeBtn.classList.add('main-panel-menu-active');\r\n              mainPanelTodayBtn.classList.remove('main-panel-menu-active');\r\n              mainPanelWeekBtn.classList.remove('main-panel-menu-active');\r\n              mainPanelNoteBtn.classList.remove('main-panel-menu-active');\r\n              mainPanelOverdueBtn.classList.remove('main-panel-menu-active');\r\n              mainPanelGeneralBtn.classList.remove('main-panel-menu-active');\r\n            }\r\n            mainPanelOpen.homeSummary(mainTodos, notes);\r\n            //to clear -active class on project tab category\r\n            projectCategoryTabs.forEach(function(projectCategoryTab, index) { \r\n                projectCategoryTab.classList.remove('main-panel-menu-projects-item-active');\r\n              });\r\n        } else if (mainPanelWindow == \"TODAY\") {\r\n          console.log(mainPanelWindow+\" menu active\");\r\n            //change class to main-panel-menu-active of TODO nav button and clears active class for others if switched from them\r\n          if (!mainPanelTodayBtn.classList.add('main-panel-menu-active') && \r\n             (mainPanelHomeBtn.classList.contains('main-panel-menu-active')||\r\n             mainPanelWeekBtn.classList.contains('main-panel-menu-active')||\r\n             mainPanelNoteBtn.classList.contains('main-panel-menu-active')||\r\n             mainPanelOverdueBtn.classList.contains('main-panel-menu-active')||\r\n             mainPanelGeneralBtn.classList.contains('main-panel-menu-active'))) {\r\n                mainPanelTodayBtn.classList.add('main-panel-menu-active');\r\n                mainPanelHomeBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelWeekBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelNoteBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelOverdueBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelGeneralBtn.classList.remove('main-panel-menu-active');\r\n            }\r\n            mainPanelOpen.todo();\r\n                \r\n            (0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.renderTodos) (mainPanelWindow, mainTodos);\r\n            projectCategoryTabs.forEach(function(projectCategoryTab, index) { \r\n                projectCategoryTab.classList.remove('main-panel-menu-projects-item-active');\r\n            });\r\n        } else if (mainPanelWindow == \"WEEK\") {\r\n            console.log(mainPanelWindow+\" menu active\");\r\n            //change class to main-panel-menu-active of TODO nav button and clears active class for others if switched from them\r\n            if (!mainPanelWeekBtn.classList.add('main-panel-menu-active') && \r\n            (mainPanelHomeBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelTodayBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelNoteBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelOverdueBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelGeneralBtn.classList.contains('main-panel-menu-active'))) {\r\n              mainPanelWeekBtn.classList.add('main-panel-menu-active');\r\n              mainPanelHomeBtn.classList.remove('main-panel-menu-active');\r\n              mainPanelTodayBtn.classList.remove('main-panel-menu-active');\r\n              mainPanelNoteBtn.classList.remove('main-panel-menu-active');\r\n              mainPanelOverdueBtn.classList.remove('main-panel-menu-active');\r\n              mainPanelGeneralBtn.classList.remove('main-panel-menu-active');\r\n            }\r\n            mainPanelOpen.todo();\r\n                \r\n            (0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.renderTodos) (mainPanelWindow, mainTodos);\r\n            projectCategoryTabs.forEach(function(projectCategoryTab, index) { \r\n              projectCategoryTab.classList.remove('main-panel-menu-projects-item-active');\r\n            });\r\n        } else if (mainPanelWindow == \"OVERDUE\") {\r\n          console.log(mainPanelWindow+\" menu active\");\r\n              //change class to main-panel-menu-active of TODO nav button and clears active class for others if switched from them\r\n            if (!mainPanelOverdueBtn.classList.add('main-panel-menu-active') && \r\n            (mainPanelHomeBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelTodayBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelNoteBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelWeekBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelGeneralBtn.classList.contains('main-panel-menu-active'))) {\r\n                mainPanelOverdueBtn.classList.add('main-panel-menu-active');\r\n                mainPanelWeekBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelHomeBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelTodayBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelNoteBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelGeneralBtn.classList.remove('main-panel-menu-active');\r\n            }\r\n            mainPanelOpen.todo();\r\n              \r\n            (0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.renderTodos) (mainPanelWindow, mainTodos);\r\n            projectCategoryTabs.forEach(function(projectCategoryTab, index) { \r\n                projectCategoryTab.classList.remove('main-panel-menu-projects-item-active');\r\n            });\r\n        } else if (mainPanelWindow == \"GENERAL\") {\r\n          console.log(mainPanelWindow+\" menu active\");\r\n              //change class to main-panel-menu-active of TODO nav button and clears active class for others if switched from them\r\n            if (!mainPanelGeneralBtn.classList.add('main-panel-menu-active') && \r\n            (mainPanelHomeBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelTodayBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelNoteBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelOverdueBtn.classList.contains('main-panel-menu-active'))) {\r\n                mainPanelGeneralBtn.classList.add('main-panel-menu-active');\r\n                mainPanelOverdueBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelWeekBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelHomeBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelTodayBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelNoteBtn.classList.remove('main-panel-menu-active');\r\n            }\r\n            mainPanelOpen.todo();\r\n              \r\n            (0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.renderTodos) (mainPanelWindow, mainTodos);\r\n            projectCategoryTabs.forEach(function(projectCategoryTab, index) { \r\n                projectCategoryTab.classList.remove('main-panel-menu-projects-item-active');\r\n            });\r\n        } else if (mainPanelWindow.match(projectTabIsActivePattern)) {\r\n          console.log(\"Projects menu tab is active\");\r\n          //let projectCategoryTabs = document.querySelectorAll(\".main-panel-menu-projects-item\");\r\n          //change class to main-panel-menu-active of TODO nav button and clears active class for others if switched from them\r\n          if (mainPanelHomeBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelTodayBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelWeekBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelNoteBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelOverdueBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelGeneralBtn.classList.contains('main-panel-menu-active')) {\r\n            mainPanelHomeBtn.classList.remove('main-panel-menu-active');\r\n            mainPanelTodayBtn.classList.remove('main-panel-menu-active');\r\n            mainPanelWeekBtn.classList.remove('main-panel-menu-active');\r\n            mainPanelNoteBtn.classList.remove('main-panel-menu-active');\r\n            mainPanelOverdueBtn.classList.remove('main-panel-menu-active');\r\n            mainPanelGeneralBtn.classList.remove('main-panel-menu-active');\r\n          }\r\n        } else if (mainPanelWindow == \"MY NOTES\") {\r\n            console.log(mainPanelWindow+\" menu active\");\r\n            //change class to main-panel-menu-active of TODO nav button and clears active class for others if switched from them\r\n            if (!mainPanelNoteBtn.classList.add('main-panel-menu-active') && \r\n            (mainPanelHomeBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelTodayBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelWeekBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelOverdueBtn.classList.contains('main-panel-menu-active')||\r\n            mainPanelGeneralBtn.classList.contains('main-panel-menu-active'))) {\r\n                mainPanelNoteBtn.classList.add('main-panel-menu-active');\r\n                mainPanelHomeBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelTodayBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelWeekBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelOverdueBtn.classList.remove('main-panel-menu-active');\r\n                mainPanelGeneralBtn.classList.remove('main-panel-menu-active');\r\n            }\r\n            mainPanelOpen.notes();\r\n            (0,_functions_js__WEBPACK_IMPORTED_MODULE_0__.renderNotes) (mainPanelWindow, notes);\r\n            projectCategoryTabs.forEach(function(projectCategoryTab, index) { \r\n                projectCategoryTab.classList.remove('main-panel-menu-projects-item-active');\r\n            });\r\n    } else {\r\n        console.log(\"No main panel menu assigned to clicked navigation button\");\r\n    }\r\n    return mainPanelWindow;\r\n  });\r\n});\r\n    \r\n/*DIALOG PANEL*/\r\n//dialog function to add todo, project and note\r\nopenCreate.addEventListener(\"click\", () => {\r\n  console.log(mainPanelWindow+\" main panel is detected\");\r\n  dialogCreateNew.showModal();\r\n  console.log(\"Dialog is open\");\r\n  //initially making TODO nav button active\r\n  dialogPopupOpen.renderCreateTodoDialog();\r\n    dialogAddTodoBtn.classList.add('create-new-menu-active');\r\n    //add button for close (OPTIONAL-default is esc button)\r\n    const cancelAddBtn = document.querySelector(\"#cancel-create-todo\");\r\n    cancelAddBtn.addEventListener(\"click\", _functions_js__WEBPACK_IMPORTED_MODULE_0__.cancelAdd);\r\n    //event listener to process inputs\r\n    dialogCreateNewForm.addEventListener(\"submit\", _functions_js__WEBPACK_IMPORTED_MODULE_0__.submitTodo);\r\n    \r\n    //adding event listener to dialog nav bar\r\n    dialogNavigationBtns.forEach(function(dialogNavigationBtn, index) {\r\n      dialogNavigationBtn.addEventListener(\"click\", function() {\r\n          let dialogWindow = dialogNavigationBtn.textContent;\r\n          if (dialogWindow == \"TO-DO\") {\r\n              console.log(dialogWindow+\" menu active again\");\r\n              try {\r\n                dialogCreateNewForm.removeEventListener('submit', _functions_js__WEBPACK_IMPORTED_MODULE_0__.submitTodo);\r\n                dialogCreateNewForm.removeEventListener('submit', _functions_js__WEBPACK_IMPORTED_MODULE_0__.submitProject);\r\n                dialogCreateNewForm.removeEventListener('submit', _functions_js__WEBPACK_IMPORTED_MODULE_0__.submitNote);\r\n              } finally {\r\n                //change class to create-new-menu-active of TODO nav button and clears active class for others if switched from them\r\n                if (!dialogAddTodoBtn.classList.add('create-new-menu-active') && \r\n                (dialogAddProjectBtn.classList.contains('create-new-menu-active')||\r\n                dialogAddNoteBtn.classList.contains('create-new-menu-active'))) {\r\n                  dialogAddTodoBtn.classList.add('create-new-menu-active');\r\n                  dialogAddProjectBtn.classList.remove('create-new-menu-active');\r\n                  dialogAddNoteBtn.classList.remove('create-new-menu-active');\r\n                }\r\n                dialogPopupOpen.renderCreateTodoDialog();\r\n                \r\n                //add button for close (OPTIONAL-default is esc button)\r\n                const cancelAddBtn = document.querySelector(\"#cancel-create-todo\");\r\n                cancelAddBtn.addEventListener(\"click\", _functions_js__WEBPACK_IMPORTED_MODULE_0__.cancelAdd);\r\n                //event listener to process inputs\r\n                dialogCreateNewForm.addEventListener(\"submit\", _functions_js__WEBPACK_IMPORTED_MODULE_0__.submitTodo);\r\n                \r\n              }\r\n          } else if (dialogWindow == \"PROJECT\") {\r\n              console.log(dialogWindow+\" menu active\");\r\n              try {\r\n                dialogCreateNewForm.removeEventListener('submit', _functions_js__WEBPACK_IMPORTED_MODULE_0__.submitTodo);\r\n                dialogCreateNewForm.removeEventListener('submit', _functions_js__WEBPACK_IMPORTED_MODULE_0__.submitProject);\r\n                dialogCreateNewForm.removeEventListener('submit', _functions_js__WEBPACK_IMPORTED_MODULE_0__.submitNote);\r\n              } finally {\r\n                //change class to create-new-menu-active of TODO nav button and clears active class for others if switched from them\r\n                if (!dialogAddProjectBtn.classList.add('create-new-menu-active') && \r\n                (dialogAddTodoBtn.classList.contains('create-new-menu-active')||\r\n                dialogAddNoteBtn.classList.contains('create-new-menu-active'))) {\r\n                  dialogAddProjectBtn.classList.add('create-new-menu-active');\r\n                  dialogAddTodoBtn.classList.remove('create-new-menu-active');\r\n                  dialogAddNoteBtn.classList.remove('create-new-menu-active');\r\n                }\r\n                dialogPopupOpen.renderCreateProjectDialog();\r\n                //add button for close (OPTIONAL-default is esc button)\r\n                const cancelAddBtn = document.querySelector(\"#cancel-create-project\");\r\n                cancelAddBtn.addEventListener(\"click\", _functions_js__WEBPACK_IMPORTED_MODULE_0__.cancelAdd);\r\n                //event listener to process inputs\r\n                dialogCreateNewForm.addEventListener(\"submit\", _functions_js__WEBPACK_IMPORTED_MODULE_0__.submitProject);\r\n              }\r\n          } else if (dialogWindow == \"NOTE\") {\r\n              console.log(dialogWindow+\" menu active\");\r\n              try {\r\n                  dialogCreateNewForm.removeEventListener('submit', _functions_js__WEBPACK_IMPORTED_MODULE_0__.submitTodo);\r\n                  dialogCreateNewForm.removeEventListener('submit', _functions_js__WEBPACK_IMPORTED_MODULE_0__.submitProject);\r\n                  dialogCreateNewForm.removeEventListener('submit', _functions_js__WEBPACK_IMPORTED_MODULE_0__.submitNote);\r\n                } finally {\r\n                  //change class to create-new-menu-active of TODO nav button and clears active class for others if switched from them\r\n                  if (!dialogAddNoteBtn.classList.add('create-new-menu-active') && \r\n                  (dialogAddProjectBtn.classList.contains('create-new-menu-active')||\r\n                  dialogAddTodoBtn.classList.contains('create-new-menu-active'))) {\r\n                    dialogAddNoteBtn.classList.add('create-new-menu-active');\r\n                    dialogAddProjectBtn.classList.remove('create-new-menu-active');\r\n                    dialogAddTodoBtn.classList.remove('create-new-menu-active');\r\n                  }\r\n                  dialogPopupOpen.renderCreateNoteDialog();\r\n                  //add button for close (OPTIONAL-default is esc button)\r\n                  const cancelAddBtn = document.querySelector(\"#cancel-create-note\");\r\n                  cancelAddBtn.addEventListener(\"click\", _functions_js__WEBPACK_IMPORTED_MODULE_0__.cancelAdd);\r\n                  //event listener to process inputs\r\n                  dialogCreateNewForm.addEventListener(\"submit\", _functions_js__WEBPACK_IMPORTED_MODULE_0__.submitNote);\r\n                }\r\n          } else {\r\n              console.log(\"No dialog menu assigned to clicked navigation button\");\r\n          }\r\n      });\r\n      \r\n    });\r\n});\r\n\r\n\n\n//# sourceURL=webpack://todo-list/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;